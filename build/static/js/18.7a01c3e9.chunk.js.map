{"version":3,"sources":["app/views/exam_centers/new_school/NewSchool.js","app/views/shared/components/ErrorModal.js","app/views/shared/components/Loader.js","fake-db/static_data/LetterTemplate.js","app/views/shared/form/form.js","app/views/exam_centers/shared/validation.js","app/views/exam_centers/shared/check_uniqueness.js","fake-db/static_data/ExamCenter.js","app/views/exam_centers/shared/components/SchoolListModal.js"],"names":["selector","formValueSelector","connect","state","showModal","newSchool","schools","schoolCode","httpError","error","loading","toggleSchoolListModal","getAllSchools","resetError","setError","reduxForm","form","validate","props","history","useHistory","useEffect","onConfirm","routeSegments","name","path","className","onSubmit","handleSubmit","values","swal","fire","title","onBeforeOpen","showLoading","onOpen","a","axios","method","url","process","data","then","response","hideLoading","icon","html","renderToStaticMarkup","login","password","allowOutsideClick","result","push","type","placeholder","helpText","component","renderMultiColumnFormInputField","items","toggleModal","onClick","checkSchoolCodeUniqueness","typeOfSchools","defaultOption","renderMultiColumnFormSelect","ErrorModal","show","text","message","styles","position","left","right","top","margin","height","width","zIndex","loaderOverlay","backgroundColor","Loader","style","tagFieldsOptions","id","value","renderError","meta","touched","formProps","readOnly","input","onChange","map","item","key","renderMultiColumnFormDateTimeField","closeOnSelect","isValidDate","timeFormat","dateFormat","renderMultipleColumnFormExamCentersCheckboxGroup","index","checked","indexOf","event","newValue","target","splice","school","examCenterCode","schoolName","renderInvigilatorOptions","options","option","user","assigningSchoolId","teacherName","renderEditAssignmentResultArrayField","label","fields","invigilator","schoolId","renderMultiColumnFormRichTextEditor","subtitle","content","handleContentChange","renderTagSelectField","removedTag","newLetterContent","letterContent","replace","fieldLength","idx","modifiedTag","newTag","changeFunction","onRemoveTag","renderTagsSelector","length","tag","remove","renderLetterTemplateRadio","Fragment","Check","radioValue","validateExamCenter","errors","safeRoomNo","validateSchool","schoolAddress","postcode","city","stateCode","areaCode","taxNumber","typeOfSchool","codeDun","codeParlimen","schoolPhoneNumber","schoolEmailAddress","test","find","checkExamCenterCodeUniqueness","examCenters","center","SchoolListModal","onHide","size","scrollable","Header","closeButton","Title","Body","Footer","variant"],"mappings":"8VAqSMA,EAAWC,YAAkB,aAYpBC,uBAVS,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAME,UAAUD,UAC3BE,QAASH,EAAME,UAAUC,QACzBC,WAAYP,EAASG,EAAO,cAC5BK,UAAWL,EAAMM,MAAMA,MACvBC,QAASP,EAAMO,QAAQA,WAIa,CACtCC,0BACAC,kBACAC,eACAC,cAJaZ,CAKZa,YAAU,CAAEC,KAAM,YAAaC,SAAUA,KAAzCF,EA5Re,SAACG,GACjB,IAAMC,EAAUC,cAEhBC,qBAAU,WACRH,EAAMN,kBACL,IA0CH,OACE,6BACGM,EAAMR,SAAW,kBAAC,IAAD,MAClB,kBAAC,IAAD,CAAYD,MAAOS,EAAMV,UAAWc,UAAWJ,EAAML,aACrD,kBAAC,IAAD,CACEU,cAAe,CACb,CAAEC,KAAM,yBAA0BC,KAAM,eACxC,CAAED,KAAM,iBAGZ,yBAAKE,UAAU,yBACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,8BACb,wBAAIA,UAAU,cAAd,gBAEF,0BAAMC,SAAUT,EAAMU,cA1DX,SAACC,GACxBC,IAAKC,KAAK,CACRC,MAAO,4BACPC,aAAc,WACZH,IAAKI,eAEPC,OAAO,WAAD,4BAAE,sBAAAC,EAAA,+EAGEC,IAAM,CACVC,OAAQ,OACRC,IAAI,GAAD,OAAKC,qCAAL,YACHC,KAAMZ,IACLa,MAAK,SAACC,GACPb,IAAKc,cACLd,IACGC,KAAK,CACJC,MAAO,+BACPa,KAAM,UACNC,KAAMC,+BACJ,oCACE,sDACA,wCAAcJ,EAASF,KAAKO,OAC5B,wCAAcL,EAASF,KAAKQ,YAGhCC,mBAAmB,IAEpBR,MAAK,SAACS,GACLhC,EAAQiC,KAAR,sBAvBF,sDA2BJlC,EAAMJ,SAAN,MA3BI,wDAAF,kDAAC,GA8BPoC,mBAAmB,QAuBP,yBAAKxB,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,aACL8B,YAAY,cACZC,SAAS,qCACTC,UAAWC,MAEb,yBAAK/B,UAAU,aACb,kBAAC,IAAD,CACEgC,MAAOxC,EAAMZ,QACbqD,YAAazC,EAAMP,sBACnBP,UAAWc,EAAMd,YAGnB,kBAAC,IAAD,CACEsB,UAAU,oCACVkC,QAAS,WACF1C,EAAMX,WAOMsD,YACb3C,EAAMZ,QACNY,EAAMX,YAGNuB,IAAKC,KACH,SADF,4BAEuBb,EAAMX,WAF7B,cAGE,WAGFuB,IAAKC,KACH,aADF,4BAEuBb,EAAMX,WAF7B,kBAGE,SApBJuB,IAAKC,KACH,4BADF,qCAGE,aAPR,sBAmCJ,yBAAKL,UAAU,qBAEf,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,aACL8B,YAAY,cACZC,SAAS,+BACTC,UAAWC,MAEb,kBAAC,IAAD,CACE/B,UAAU,WACV2B,KAAK,OACL7B,KAAK,gBACL8B,YAAY,iBACZC,SAAS,kCACTC,UAAWC,OAIf,yBAAK/B,UAAU,qBAEf,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,WACL8B,YAAY,WACZC,SAAS,4BACTC,UAAWC,MAEb,kBAAC,IAAD,CACE/B,UAAU,WACV2B,KAAK,OACL7B,KAAK,OACL8B,YAAY,OACZC,SAAS,wBACTC,UAAWC,OAIf,yBAAK/B,UAAU,qBAEf,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,YACL8B,YAAY,aACZC,SAAS,8BACTC,UAAWC,MAEb,kBAAC,IAAD,CACE/B,UAAU,WACV2B,KAAK,OACL7B,KAAK,WACL8B,YAAY,YACZC,SAAS,6BACTC,UAAWC,OAIf,yBAAK/B,UAAU,qBAEf,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,YACL8B,YAAY,aACZC,SAAS,8BACTC,UAAWC,MAEb,kBAAC,IAAD,CACE/B,UAAU,WACVF,KAAK,eACLkC,MAAOI,IACPP,SAAS,mCACTQ,cAAc,kCACdP,UAAWQ,OAIf,yBAAKtC,UAAU,qBAEf,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,UACL8B,YAAY,WACZC,SAAS,4BACTC,UAAWC,MAEb,kBAAC,IAAD,CACE/B,UAAU,WACV2B,KAAK,OACL7B,KAAK,eACL8B,YAAY,gBACZC,SAAS,iCACTC,UAAWC,OAIf,yBAAK/B,UAAU,qBAEf,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACV2B,KAAK,OACL7B,KAAK,oBACL8B,YAAY,eACZC,SAAS,uCACTC,UAAWC,MAEb,kBAAC,IAAD,CACE/B,UAAU,WACV2B,KAAK,QACL7B,KAAK,qBACL8B,YAAY,gBACZC,SAAS,wCACTC,UAAWC,OAIf,yBAAK/B,UAAU,sBAEjB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,4BAAQ2B,KAAK,SAAS3B,UAAU,uBAAhC,mC,iCCpR1B,sCAqBeuC,IAlBI,SAAC/C,GAClB,OACE,kBAAC,IAAD,CACEgD,OAAQhD,EAAMT,MACduB,MAAM,mBACNqB,KAAK,QACLc,KACEjD,EAAMT,MACFS,EAAMT,MAAMkC,SACVzB,EAAMT,MAAMkC,SAASF,KAAK2B,QAC1BlD,EAAMT,MAAM2D,QACd,GAEN9C,UAAW,kBAAMJ,EAAMI,iB,iCChB7B,oBAEM+C,EAAS,CACbC,SAAU,QACVC,KAAM,EACNC,MAAO,EACPC,IAAK,mBACLC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,WAGJC,EAAgB,CACpBR,SAAU,QACVC,KAAM,EACNE,IAAK,EACLE,OAAQ,OACRC,MAAO,OACPC,OAAQ,UACRE,gBAAiB,SAaJC,IAVA,WACb,OACE,yBAAKC,MAAOH,GACV,yBAAKG,MAAOZ,GACV,yBAAK3C,UAAU,sD,iCC3BvB,kCAAO,IAAMwD,EAAmB,CAC9B,CACEC,GAAI,KACJnD,MAAO,wBACPoD,MAAO,SAET,CACED,GAAI,KACJnD,MAAO,YACPoD,MAAO,YAET,CACED,GAAI,KACJnD,MAAO,4BACPoD,MAAO,8FAET,CACED,GAAI,KACJnD,MAAO,uBACPoD,MAAO,8FAET,CACED,GAAI,KACJnD,MAAO,4BACPoD,MAAO,2FAET,CACED,GAAI,KACJnD,MAAO,OACPoD,MAAO,iDAET,CACED,GAAI,KACJnD,MAAO,mBACPoD,MAAO,4GAET,CACED,GAAI,KACJnD,MAAO,iBACPoD,MAAO,2G,oYChCLC,EAAc,SAACC,GACnB,GAAIA,EAAKC,SAAWD,EAAK7E,MACvB,OAAO,yBAAKiB,UAAU,yBAAyB4D,EAAK7E,QAI3CgD,EAAkC,SAAC+B,GAC9C,OACE,yBAAK9D,UAAS,qBAAgB8D,EAAU9D,WAAa,KACnD,yCACE+D,SAAUD,EAAUC,SACpBpC,KAAMmC,EAAUnC,MACZmC,EAAUE,MAHhB,CAIEpC,YAAakC,EAAUlC,YACvB5B,UAAU,kBAEZ,2BAAOA,UAAU,4BAA4B8D,EAAUjC,UACtD8B,EAAYG,EAAUF,QAKhBtB,EAA8B,SAACwB,GAC1C,OACE,yBAAK9D,UAAS,qBAAgB8D,EAAU9D,WAAa,KACnD,0CACEA,UAAU,gBACN8D,EAAUE,MAFhB,CAGEC,SAAUH,EAAUE,MAAMC,WAE1B,4BAAQP,MAAM,IAAII,EAAUzB,eAC3ByB,EAAU9B,MAAMkC,KAAI,SAACC,GAAD,OACnB,4BAAQC,IAAKD,EAAKV,GAAIC,MAAOS,EAAKT,OAC/BS,EAAK7D,WAIZ,2BAAON,UAAU,4BAA4B8D,EAAUjC,UACtD8B,EAAYG,EAAUF,QAKhBS,EAAqC,SAACP,GACjD,OACE,yBAAK9D,UAAS,qBAAgB8D,EAAU9D,WAAa,KACnD,kBAAC,IAAD,CACEF,KAAMgE,EAAUhE,KAChBwE,eAAe,EACfL,SAAUH,EAAUE,MAAMC,SAC1BM,YAAaT,EAAUS,YACvBC,WAAW,QACXC,WAAW,aACX7C,YAAakC,EAAUlC,YACvB8B,MAAOI,EAAUE,MAAMN,QAEzB,2BAAO1D,UAAU,4BAA4B8D,EAAUjC,UACtD8B,EAAYG,EAAUF,QAKhBc,EAAmD,SAACZ,GAC/D,OACE,yBAAK9D,UAAS,qBAAgB8D,EAAU9D,WAAa,KACnD,2BAAOA,UAAU,kBAAjB,kBACA,yBAAKA,UAAU,OACZ8D,EAAU9B,MAAMkC,KAAI,SAACC,EAAMQ,GAC1B,OACE,yBAAK3E,UAAU,sBAAsBoE,IAAKO,GACxC,2BAAO3E,UAAU,6BACf,2BACE2B,KAAK,WACL7B,KAAI,UAAKgE,EAAUE,MAAMlE,KAArB,YAA6B6E,EAA7B,KACJjB,MAAOS,EAAKV,GACZmB,SAAqD,IAA5Cd,EAAUE,MAAMN,MAAMmB,QAAQV,EAAKV,IAC5CQ,SAAU,SAACa,GACT,IAAMC,EAAQ,YAAOjB,EAAUE,MAAMN,OAOrC,OANIoB,EAAME,OAAOJ,QACfG,EAASrD,KAAKyC,EAAKV,IAEnBsB,EAASE,OAAOF,EAASF,QAAQV,EAAKV,IAAK,GAGtCK,EAAUE,MAAMC,SAASc,MAGpC,wCAAUZ,EAAKe,OAAOrG,WAAtB,cAAsCsF,EAAKgB,eAA3C,cAA+DhB,EAAKe,OAAOE,aAC3E,0BAAMpF,UAAU,oBAMzB2D,EAAYG,EAAUF,QAKhByB,EAA2B,SAACvB,GACvC,OACE,yBAAK9D,UAAS,qBAAgB8D,EAAU9D,WAAa,KACnD,4CACM8D,EAAUE,MADhB,CAEEhE,UAAU,eACViE,SAAUH,EAAUE,MAAMC,WAEzBH,EAAUwB,QAAQpB,KAAI,SAACqB,GACtB,OACEA,EAAOC,KAAKN,OAAOzB,KAAOK,EAAU2B,mBAClC,4BAAQrB,IAAKmB,EAAO9B,GAAIC,MAAO6B,EAAO9B,IAAtC,UACM8B,EAAOG,YADb,cAC8BH,EAAOC,KAAKN,OAAOrG,iBAMxD8E,EAAYG,EAAUF,QAKhB+B,EAAuC,SAAC7B,GACnD,OACE,yBAAK9D,UAAU,YACb,2BAAOA,UAAU,kBAAkB8D,EAAU8B,OAC7C,yBAAK5F,UAAU,OACZ8D,EAAU+B,OAAO3B,KAAI,SAAC4B,EAAanB,GAClC,OACE,kBAAC,IAAD,CACEP,IAAK0B,EACL9F,UAAU,YACVF,KAAMgG,EACNR,QAASxB,EAAUwB,QACnBG,kBAAmB3B,EAAUiC,SAC7BjE,UAAWuD,UASZW,EAAsC,SAAClC,GAClD,OACE,yBAAK9D,UAAU,aACb,kBAAC,IAAD,CAAYM,MAAOwD,EAAUxD,MAAO2F,SAAUnC,EAAUmC,UACtD,kBAAC,IAAD,iBACMnC,EAAUE,MADhB,CAEEkC,QAASpC,EAAUE,MAAMN,MACzByC,oBAAqBrC,EAAUE,MAAMC,SACrCrC,YAAakC,EAAUlC,gBAG1B+B,EAAYG,EAAUF,QAKvBwC,EAAuB,SAACtC,GAC5B,OACE,yBAAK9D,UAAS,qBAAgB8D,EAAU9D,WAAa,KACnD,yBAAKA,UAAU,OACb,2BAAOA,UAAU,2DACd8D,EAAU8B,OAEb,yBAAK5F,UAAU,YACb,0CACEA,UAAU,gBACN8D,EAAUE,MAFhB,CAGEC,SAAUH,EAAUE,MAAMC,WAE1B,4BAAQP,MAAM,IAAII,EAAUzB,eAC3ByB,EAAU9B,MAAMkC,KAAI,SAACC,GAAD,OACnB,4BAAQC,IAAKD,EAAKV,GAAIC,MAAOS,EAAKT,OAC/BS,EAAK7D,YAKd,yBAAKN,UAAU,YACb,4BACE2B,KAAK,SACL3B,UAAU,qBACVkC,QAAS,WACP,IAAMmE,EAAa,QAAUvC,EAAUa,MAAQ,GAAK,OAChD2B,EAAmBxC,EAAUyC,cAAcC,QAC7CH,EACA,IAEF,GAAIvC,EAAUa,MAAQb,EAAU2C,YAC9B,IACE,IAAIC,EAAM5C,EAAUa,MAAQ,EAC5B+B,EAAM5C,EAAU2C,YAChBC,IACA,CACA,IAAMC,EAAc,QAAUD,EAAM,GAAK,OACnCE,EAAS,OAASF,EAAM,OAC9BJ,EAAmBA,EAAiBE,QAClCG,EACAC,GAIN9C,EAAU+C,eAAe,UAAWP,GACpCxC,EAAUgD,YAAYhD,EAAUa,SAxBpC,gBA+BHhB,EAAYG,EAAUF,QAKhBmD,EAAqB,SAACjD,GACjC,OACE,yBAAK9D,UAAU,OACb,yBAAKA,UAAU,aACb,4BACE2B,KAAK,SACL3B,UAAU,gCACVkC,QAAS,WAEP,IAAIoE,EADJxC,EAAU+B,OAAOnE,KAAK,IAGpB4E,EADExC,EAAUyC,cAEVzC,EAAUyC,cACV,QACCzC,EAAU+B,OAAOmB,OAAS,GAC3B,OAGA,QAAUlD,EAAU+B,OAAOmB,OAAS,GAAK,OAE7ClD,EAAU+C,eAAe,UAAWP,KAhBxC,gBAuBF,yBAAKtG,UAAU,qBAEd8D,EAAU+B,OAAO3B,KAAI,SAAC+C,EAAKtC,GAAN,OACpB,kBAAC,IAAD,CACEP,IAAKO,EACL3E,UAAU,YACV4F,MAAK,WAAMjB,EAAQ,EAAd,KACL7E,KAAI,UAAKmH,EAAL,UACJnF,UAAWsE,EACX/D,cAAc,wBACdyE,YAAahD,EAAU+B,OAAOqB,OAC9BL,eAAgB/C,EAAU+C,eAC1BN,cAAezC,EAAUyC,cACzB5B,MAAOA,EACP8B,YAAa3C,EAAU+B,OAAOmB,OAC9BhF,MAAOwB,WAOJ2D,EAA4B,SAACrD,GACxC,OACE,kBAAC,IAAMsD,SAAP,KACE,kBAAC,IAAKC,MAAN,eACE1F,KAAK,QACLiE,MAAO9B,EAAU8B,OACb9B,EAAUE,MAHhB,CAIEN,MAAOI,EAAUwD,cAElB3D,EAAYG,EAAUF,S,iCC3R7B,oEAAO,IAAM2D,EAAqB,SAACpH,GACjC,IAAMqH,EAAS,GAUf,OARKrH,EAAOgF,iBACVqC,EAAOrC,eAAiB,qCAGrBhF,EAAOsH,aACVD,EAAOC,WAAa,qCAGfD,GAGIE,EAAiB,SAACvH,GAC7B,IAAMqH,EAAS,GA4Df,OA1DKrH,EAAOtB,aACV2I,EAAO3I,WAAa,gCAGjBsB,EAAOiF,aACVoC,EAAOpC,WAAa,gCAGjBjF,EAAOwH,gBACVH,EAAOG,cAAgB,mCAGpBxH,EAAOyH,WACVJ,EAAOI,SAAW,6BAGfzH,EAAO0H,OACVL,EAAOK,KAAO,yBAGX1H,EAAO2H,YACVN,EAAOM,UAAY,+BAGhB3H,EAAO4H,WACVP,EAAOO,SAAW,8BAGf5H,EAAO6H,YACVR,EAAOQ,UAAY,+BAGhB7H,EAAO8H,eACVT,EAAOS,aAAe,oCAGnB9H,EAAO+H,UACVV,EAAOU,QAAU,6BAGd/H,EAAOgI,eACVX,EAAOW,aAAe,kCAGnBhI,EAAOiI,oBACVZ,EAAOY,kBAAoB,0CAGxBjI,EAAOkI,mBAGT,gDAAgDC,KAC/CnI,EAAOkI,sBAGTb,EAAOa,mBAAqB,+CAN5Bb,EAAOa,mBAAqB,0CASvBb,I,iCC3ET,oEAAO,IAAMrF,EAA4B,SAACvD,EAASC,GAGjD,OAFeD,EAAQ2J,MAAK,SAACrD,GAAD,OAAYA,EAAOrG,aAAeA,MAInD2J,EAAgC,SAACC,EAAatD,GAGzD,OAFmBsD,EAAYF,MAAK,SAACG,GAAD,OAAYA,EAAOvD,iBAAmBA,O,iCCN5E,kCAAO,IAAM/C,EAAgB,CAC3B,CACEqB,GAAI,KACJnD,MAAO,gBACPoD,MAAO,iBAET,CACED,GAAI,KACJnD,MAAO,uBACPoD,MAAO,wBAET,CACED,GAAI,KACJnD,MAAO,iBACPoD,MAAO,kBAET,CACED,GAAI,KACJnD,MAAO,oBACPoD,MAAO,uB,iCCnBX,sCAyDeiF,IAtDS,SAACnJ,GACvB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEQ,UAAU,+BACVkC,QAAS,kBAAM1C,EAAMyC,aAAY,KAFnC,0BAMA,kBAAC,IAAD,CACEO,KAAMhD,EAAMd,UACZkK,OAAQ,kBAAMpJ,EAAMyC,aAAY,IAChC4G,KAAK,KACLC,YAAY,GAEZ,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,OAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKlJ,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,QAAd,sBACA,wBAAIA,UAAU,cACXR,EAAMwC,MAAMkC,KAAI,SAACgB,GAChB,OACE,wBACElF,UAAU,kBACVoE,IAAKc,EAAOzB,IAFd,UAGKyB,EAAOrG,WAHZ,cAG4BqG,EAAOE,WAHnC,cAGmDF,EAAOuD,YAAYzB,OAHtE,6BAYhB,kBAAC,IAAMmC,OAAP,KACE,kBAAC,IAAD,CACEC,QAAQ,YACRlH,QAAS,WACP1C,EAAMyC,aAAY,KAHtB","file":"static/js/18.7a01c3e9.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"app/views/shared/components/Loader\";\r\nimport ErrorModal from \"app/views/shared/components/ErrorModal\";\r\nimport { typeOfSchools } from \"fake-db/static_data/ExamCenter\";\r\nimport {\r\n  renderMultiColumnFormInputField,\r\n  renderMultiColumnFormSelect,\r\n} from \"app/views/shared/form/form\";\r\nimport SchoolListModal from \"../shared/components/SchoolListModal\";\r\nimport { validateSchool as validate } from \"../shared/validation\";\r\nimport {\r\n  getAllSchools,\r\n  toggleSchoolListModal,\r\n} from \"app/redux/actions/NewSchoolActions\";\r\nimport { resetError, setError } from \"app/redux/actions/ErrorModalActions\";\r\nimport { checkSchoolCodeUniqueness } from \"../shared/check_uniqueness\";\r\n\r\nconst NewSchool = (props) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    props.getAllSchools();\r\n  }, []);\r\n\r\n  const handleFormSubmit = (values) => {\r\n    swal.fire({\r\n      title: \"Registering new school...\",\r\n      onBeforeOpen: () => {\r\n        swal.showLoading();\r\n      },\r\n      onOpen: async () => {\r\n        //submit form process here remember to async and await with try...catch block\r\n        try {\r\n          await axios({\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_BACKEND_URL}/schools`,\r\n            data: values,\r\n          }).then((response) => {\r\n            swal.hideLoading();\r\n            swal\r\n              .fire({\r\n                title: \"Successfully Register School\",\r\n                icon: \"success\",\r\n                html: renderToStaticMarkup(\r\n                  <>\r\n                    <h3>Exam Secretary Account</h3>\r\n                    <p>Username: {response.data.login}</p>\r\n                    <p>Password: {response.data.password}</p>\r\n                  </>\r\n                ),\r\n                allowOutsideClick: false,\r\n              })\r\n              .then((result) => {\r\n                history.push(`/school/list`);\r\n              });\r\n          });\r\n        } catch (err) {\r\n          props.setError(err);\r\n        }\r\n      },\r\n      allowOutsideClick: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.loading && <Loader></Loader>}\r\n      <ErrorModal error={props.httpError} onConfirm={props.resetError} />\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Schools & Exam Centers\", path: \"/examcenter\" },\r\n          { name: \"New School\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n      <div className=\"2-columns-form-layout\">\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header bg-transparent\">\r\n                  <h3 className=\"card-title\"> New School</h3>\r\n                </div>\r\n                <form onSubmit={props.handleSubmit(handleFormSubmit)}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"schoolCode\"\r\n                        placeholder=\"School Code\"\r\n                        helpText=\"Please enter an unique school code\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <div className=\"col-md-6 \">\r\n                        <SchoolListModal\r\n                          items={props.schools}\r\n                          toggleModal={props.toggleSchoolListModal}\r\n                          showModal={props.showModal}\r\n                        />\r\n\r\n                        <Button\r\n                          className=\"text-capitalize btn btn-dark ms-2\"\r\n                          onClick={() => {\r\n                            if (!props.schoolCode) {\r\n                              swal.fire(\r\n                                \"No school code is entered\",\r\n                                `Please enter the school code first`,\r\n                                \"warning\"\r\n                              );\r\n                            } else {\r\n                              const unique = checkSchoolCodeUniqueness(\r\n                                props.schools,\r\n                                props.schoolCode\r\n                              );\r\n                              if (unique) {\r\n                                swal.fire(\r\n                                  \"Unique\",\r\n                                  `The school code - ${props.schoolCode} is unique`,\r\n                                  \"success\"\r\n                                );\r\n                              } else {\r\n                                swal.fire(\r\n                                  \"Not Unique\",\r\n                                  `The school code - ${props.schoolCode} is not unique`,\r\n                                  \"error\"\r\n                                );\r\n                              }\r\n                            }\r\n                          }}\r\n                        >\r\n                          Check Uniqueness\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"schoolName\"\r\n                        placeholder=\"School Name\"\r\n                        helpText=\"Please enter the school name\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"schoolAddress\"\r\n                        placeholder=\"School Address\"\r\n                        helpText=\"Please enter the school address\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"postcode\"\r\n                        placeholder=\"Postcode\"\r\n                        helpText=\"Please enter the postcode\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        placeholder=\"City\"\r\n                        helpText=\"Please enter the city\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"stateCode\"\r\n                        placeholder=\"State Code\"\r\n                        helpText=\"Please enter the state code\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"areaCode\"\r\n                        placeholder=\"Area Code\"\r\n                        helpText=\"Please enter the area code\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"taxNumber\"\r\n                        placeholder=\"Tax Number\"\r\n                        helpText=\"Please enter the Tax Number\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"typeOfSchool\"\r\n                        items={typeOfSchools}\r\n                        helpText=\"Please select the type of school\"\r\n                        defaultOption=\"Please select type of school...\"\r\n                        component={renderMultiColumnFormSelect}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"codeDun\"\r\n                        placeholder=\"Code DUN\"\r\n                        helpText=\"Please enter the code DUN\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"codeParlimen\"\r\n                        placeholder=\"Code Parlimen\"\r\n                        helpText=\"Please enter the code Parlimen\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"text\"\r\n                        name=\"schoolPhoneNumber\"\r\n                        placeholder=\"Phone Number\"\r\n                        helpText=\"Please enter the school phone number\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        type=\"email\"\r\n                        name=\"schoolEmailAddress\"\r\n                        placeholder=\"Email Address\"\r\n                        helpText=\"Please enter the school email address\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"mc-footer\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button type=\"submit\" className=\"btn btn-primary m-1\">\r\n                            Register School\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst selector = formValueSelector(\"NewSchool\");\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    showModal: state.newSchool.showModal,\r\n    schools: state.newSchool.schools,\r\n    schoolCode: selector(state, \"schoolCode\"),\r\n    httpError: state.error.error,\r\n    loading: state.loading.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleSchoolListModal,\r\n  getAllSchools,\r\n  resetError,\r\n  setError,\r\n})(reduxForm({ form: \"NewSchool\", validate: validate })(NewSchool));\r\n","import React from \"react\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <SweetAlert\r\n      show={!!props.error}\r\n      title=\"An Error Occured\"\r\n      type=\"error\"\r\n      text={\r\n        props.error\r\n          ? props.error.response\r\n            ? props.error.response.data.message\r\n            : props.error.message\r\n          : \"\"\r\n      }\r\n      onConfirm={() => props.onConfirm()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  right: 0,\r\n  top: \"calc(50% - 20px)\",\r\n  margin: \"auto\",\r\n  height: \"40px\",\r\n  width: \"40px\",\r\n  zIndex: 324324324,\r\n};\r\n\r\nconst loaderOverlay = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  top: 0,\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  zIndex: 324324323,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div style={loaderOverlay}>\r\n      <div style={styles}>\r\n        <div className=\"spinner spinner-bubble spinner-bubble-primary\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const tagFieldsOptions = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Task Title\",\r\n    value: \"title\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Exam Type\",\r\n    value: \"examType\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Assigned Exam Center Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolName\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    title: \"Assigned School Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolCode\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    title: \"Assigned Exam Center Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.examCenterCode\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    title: \"Role\",\r\n    value: \"assignmentResults[assignmentResultIndex].role\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    title: \"Invigilator Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    title: \"Invigilator IC\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].icNumber\",\r\n  },\r\n];\r\n\r\nexport const LetterTemplates = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Letter for Chief Of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Assignment Letter for Vice Chief of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Vice Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport DateTime from \"react-datetime\";\r\nimport { SimpleCard, RichTextEditor } from \"@gull\";\r\nimport { Field } from \"redux-form\";\r\nimport { tagFieldsOptions } from \"fake-db/static_data/LetterTemplate\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst renderError = (meta) => {\r\n  if (meta.touched && meta.error) {\r\n    return <div className=\"text-danger mt-1 ml-2\">{meta.error}</div>;\r\n  }\r\n};\r\n\r\nexport const renderMultiColumnFormInputField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <input\r\n        readOnly={formProps.readOnly}\r\n        type={formProps.type}\r\n        {...formProps.input}\r\n        placeholder={formProps.placeholder}\r\n        className=\"form-control\"\r\n      ></input>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormSelect = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        className=\"form-control\"\r\n        {...formProps.input}\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        <option value=\"\">{formProps.defaultOption}</option>\r\n        {formProps.items.map((item) => (\r\n          <option key={item.id} value={item.value}>\r\n            {item.title}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormDateTimeField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <DateTime\r\n        name={formProps.name}\r\n        closeOnSelect={true}\r\n        onChange={formProps.input.onChange}\r\n        isValidDate={formProps.isValidDate}\r\n        timeFormat=\"HH:mm\"\r\n        dateFormat=\"DD/MM/YYYY\"\r\n        placeholder={formProps.placeholder}\r\n        value={formProps.input.value}\r\n      />\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultipleColumnFormExamCentersCheckboxGroup = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <label className=\"ul-form__label\">Exam Centers: </label>\r\n      <div className=\"row\">\r\n        {formProps.items.map((item, index) => {\r\n          return (\r\n            <div className=\"form-group col-md-6\" key={index}>\r\n              <label className=\"checkbox checkbox-primary\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={`${formProps.input.name}[${index}]`}\r\n                  value={item.id}\r\n                  checked={formProps.input.value.indexOf(item.id) !== -1}\r\n                  onChange={(event) => {\r\n                    const newValue = [...formProps.input.value];\r\n                    if (event.target.checked) {\r\n                      newValue.push(item.id);\r\n                    } else {\r\n                      newValue.splice(newValue.indexOf(item.id), 1);\r\n                    }\r\n\r\n                    return formProps.input.onChange(newValue);\r\n                  }}\r\n                />\r\n                <span>{`${item.school.schoolCode} - ${item.examCenterCode} - ${item.school.schoolName}`}</span>\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderInvigilatorOptions = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        {...formProps.input}\r\n        className=\"form-control\"\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        {formProps.options.map((option) => {\r\n          return (\r\n            option.user.school.id !== formProps.assigningSchoolId && (\r\n              <option key={option.id} value={option.id}>\r\n                {`${option.teacherName} - ${option.user.school.schoolCode}`}\r\n              </option>\r\n            )\r\n          );\r\n        })}\r\n      </select>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderEditAssignmentResultArrayField = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <label className=\"ul-form__label\">{formProps.label}</label>\r\n      <div className=\"row\">\r\n        {formProps.fields.map((invigilator, index) => {\r\n          return (\r\n            <Field\r\n              key={invigilator}\r\n              className=\"col-lg-12\"\r\n              name={invigilator}\r\n              options={formProps.options}\r\n              assigningSchoolId={formProps.schoolId}\r\n              component={renderInvigilatorOptions}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormRichTextEditor = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <SimpleCard title={formProps.title} subtitle={formProps.subtitle}>\r\n        <RichTextEditor\r\n          {...formProps.input}\r\n          content={formProps.input.value}\r\n          handleContentChange={formProps.input.onChange}\r\n          placeholder={formProps.placeholder}\r\n        />\r\n      </SimpleCard>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderTagSelectField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <div className=\"row\">\r\n        <label className=\"ul-form__label ul-form--margin col-lg-1 col-form-label \">\r\n          {formProps.label}\r\n        </label>\r\n        <div className=\"col-lg-8\">\r\n          <select\r\n            className=\"form-control\"\r\n            {...formProps.input}\r\n            onChange={formProps.input.onChange}\r\n          >\r\n            <option value=\"\">{formProps.defaultOption}</option>\r\n            {formProps.items.map((item) => (\r\n              <option key={item.id} value={item.value}>\r\n                {item.title}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger m-1\"\r\n            onClick={() => {\r\n              const removedTag = \"&lt;\" + (formProps.index + 1) + \"&gt;\";\r\n              let newLetterContent = formProps.letterContent.replace(\r\n                removedTag,\r\n                \"\"\r\n              );\r\n              if (formProps.index < formProps.fieldLength) {\r\n                for (\r\n                  var idx = formProps.index + 1;\r\n                  idx < formProps.fieldLength;\r\n                  idx++\r\n                ) {\r\n                  const modifiedTag = \"&lt;\" + (idx + 1) + \"&gt;\";\r\n                  const newTag = \"&lt;\" + idx + \"&gt;\";\r\n                  newLetterContent = newLetterContent.replace(\r\n                    modifiedTag,\r\n                    newTag\r\n                  );\r\n                }\r\n              }\r\n              formProps.changeFunction(\"content\", newLetterContent);\r\n              formProps.onRemoveTag(formProps.index);\r\n            }}\r\n          >\r\n            Remove Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderTagsSelector = (formProps) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-secondary m-1\"\r\n          onClick={() => {\r\n            formProps.fields.push({});\r\n            let newLetterContent;\r\n            if (formProps.letterContent) {\r\n              newLetterContent =\r\n                formProps.letterContent +\r\n                \"&lt;\" +\r\n                (formProps.fields.length + 1) +\r\n                \"&gt;\";\r\n            } else {\r\n              newLetterContent =\r\n                \"&lt;\" + (formProps.fields.length + 1) + \"&gt;\";\r\n            }\r\n            formProps.changeFunction(\"content\", newLetterContent);\r\n          }}\r\n        >\r\n          Add New Tag\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"custom-separator\"></div>\r\n\r\n      {formProps.fields.map((tag, index) => (\r\n        <Field\r\n          key={index}\r\n          className=\"col-md-12\"\r\n          label={`<${index + 1}>`}\r\n          name={`${tag}.value`}\r\n          component={renderTagSelectField}\r\n          defaultOption=\"Please select a field\"\r\n          onRemoveTag={formProps.fields.remove}\r\n          changeFunction={formProps.changeFunction}\r\n          letterContent={formProps.letterContent}\r\n          index={index}\r\n          fieldLength={formProps.fields.length}\r\n          items={tagFieldsOptions}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderLetterTemplateRadio = (formProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.Check\r\n        type=\"radio\"\r\n        label={formProps.label}\r\n        {...formProps.input}\r\n        value={formProps.radioValue}\r\n      />\r\n      {renderError(formProps.meta)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","export const validateExamCenter = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.examCenterCode) {\r\n    errors.examCenterCode = \"Please enter the exam center code\";\r\n  }\r\n\r\n  if (!values.safeRoomNo) {\r\n    errors.safeRoomNo = \"Please enter the safe room number\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateSchool = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.schoolCode) {\r\n    errors.schoolCode = \"Please enter the school code\";\r\n  }\r\n\r\n  if (!values.schoolName) {\r\n    errors.schoolName = \"Please enter the school name\";\r\n  }\r\n\r\n  if (!values.schoolAddress) {\r\n    errors.schoolAddress = \"Please enter the school address\";\r\n  }\r\n\r\n  if (!values.postcode) {\r\n    errors.postcode = \"Please enter the postcode\";\r\n  }\r\n\r\n  if (!values.city) {\r\n    errors.city = \"Please enter the city\";\r\n  }\r\n\r\n  if (!values.stateCode) {\r\n    errors.stateCode = \"Please enter the state code\";\r\n  }\r\n\r\n  if (!values.areaCode) {\r\n    errors.areaCode = \"Please enter the area code\";\r\n  }\r\n\r\n  if (!values.taxNumber) {\r\n    errors.taxNumber = \"Please enter the tax number\";\r\n  }\r\n\r\n  if (!values.typeOfSchool) {\r\n    errors.typeOfSchool = \"Please select the type of school\";\r\n  }\r\n\r\n  if (!values.codeDun) {\r\n    errors.codeDun = \"Please enter the code DUN\";\r\n  }\r\n\r\n  if (!values.codeParlimen) {\r\n    errors.codeParlimen = \"Please enter the code Parlimen\";\r\n  }\r\n\r\n  if (!values.schoolPhoneNumber) {\r\n    errors.schoolPhoneNumber = \"Please enter the school's phone number\";\r\n  }\r\n\r\n  if (!values.schoolEmailAddress) {\r\n    errors.schoolEmailAddress = \"Please enter the school's email address\";\r\n  } else if (\r\n    !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n      values.schoolEmailAddress\r\n    )\r\n  ) {\r\n    errors.schoolEmailAddress = \"Please enter a valid school's email address\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","export const checkSchoolCodeUniqueness = (schools, schoolCode) => {\r\n  const school = schools.find((school) => school.schoolCode === schoolCode);\r\n  \r\n  return !school ? true : false;\r\n};\r\nexport const checkExamCenterCodeUniqueness = (examCenters, examCenterCode) => {\r\n  const examCenter = examCenters.find((center) => center.examCenterCode === examCenterCode);\r\n  \r\n  return !examCenter ? true : false;\r\n};\r\n","export const typeOfSchools = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Public School\",\r\n    value: \"Public School\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"International School\",\r\n    value: \"International School\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    title: \"Private School\",\r\n    value: \"Private School\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Vernacular School\",\r\n    value: \"Vernacular School\",\r\n  },\r\n]\r\n\r\nexport const examCenters = [\r\n  {\r\n    id: \"01\",\r\n    examCenterCode: \"JC005\",\r\n    school: \"01\",\r\n    safeRoomNo: \"J01\",\r\n    assignmentTasks: [\"01\", \"02\", \"03\", \"04\"],\r\n  },\r\n  {\r\n    id: \"02\",\r\n    examCenterCode: \"JC017\",\r\n    school: \"02\",\r\n    safeRoomNo: \"J02\",\r\n    assignmentTasks: [\"01\", \"02\", \"03\", \"04\"],\r\n  },\r\n  {\r\n    id: \"03\",\r\n    examCenterCode: \"JC013\",\r\n    school: \"03\",\r\n    safeRoomNo: \"J03\",\r\n    assignmentTasks: [\"01\", \"02\", \"03\", \"04\"],\r\n  },\r\n];\r\n\r\nexport const Schools = [\r\n  {\r\n    id: \"01\",\r\n    name: \"SMK Tinggi Kluang\",\r\n    schoolCode: \"JEB2037\",\r\n    examCenters: [\"01\"],\r\n    address: \"xxxx, Jalan XXX, 81000, XXX, Johor\",\r\n    examSecretary: \"01\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    name: \"SMK Tengku Aris Bendahara\",\r\n    schoolCode: \"JEB2038\",\r\n    examCenters: [\"02\"],\r\n    address: \"xxxx, Jalan XXX, 81000, XXX, Johor\",\r\n    examSecretary: \"02\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    name: \"SMK Sultan Abdul Jalil\",\r\n    schoolCode: \"JEA2033\",\r\n    examCenters: [\"03\"],\r\n    address: \"xxxx, Jalan XXX, 81000, XXX, Johor\",\r\n    examSecretary: \"03\",\r\n  },\r\n];\r\n\r\nexport const AssignmentTasks = [\r\n  {\r\n    id: \"01\",\r\n    title: \"SPM 2020\",\r\n    examType: \"SPM\",\r\n    createdDate: \"20/03/2020 17:16\",\r\n    collectionDate: \"21/03/2020 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [\"01\", \"02\", \"03\"],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Completed\" },\r\n      { examCenter: \"02\", status: \"Completed\" },\r\n      { examCenter: \"03\", status: \"Completed\" },\r\n    ],\r\n    chiefInvigilatorComplete: true,\r\n    viceChiefInvigilatorComplete: true,\r\n    invigilatorComplete: true,\r\n    environmentalSupervisorComplete: true,\r\n    roomKeeperComplete: true,\r\n    reservedInvigilatorComplete: true,\r\n    assignmentResults: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"],\r\n    status: \"Assignment Complete\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"STPM 2022\",\r\n    examType: \"STPM\",\r\n    createdDate: \"20/03/2022 17:16\",\r\n    collectionDate: \"20/04/2022 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Incomplete\" },\r\n      { examCenter: \"02\", status: \"Incomplete\" },\r\n      { examCenter: \"03\", status: \"Incomplete\" },\r\n    ],\r\n    chiefInvigilatorComplete: false,\r\n    viceChiefInvigilatorComplete: false,\r\n    invigilatorComplete: false,\r\n    environmentalSupervisorComplete: false,\r\n    roomKeeperComplete: false,\r\n    reservedInvigilatorComplete: false,\r\n    assignmentResults: [],\r\n    status: \"Collection in progress\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    title: \"SPM 2022\",\r\n    examType: \"SPM\",\r\n    createdDate: \"18/03/2022 17:16\",\r\n    collectionDate: \"19/03/2022 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [\"04\", \"05\", \"06\"],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Completed\" },\r\n      { examCenter: \"02\", status: \"Completed\" },\r\n      { examCenter: \"03\", status: \"Completed\" },\r\n    ],\r\n    chiefInvigilatorComplete: true,\r\n    viceChiefInvigilatorComplete: false,\r\n    invigilatorComplete: true,\r\n    environmentalSupervisorComplete: false,\r\n    roomKeeperComplete: false,\r\n    reservedInvigilatorComplete: false,\r\n    assignmentResults: [\"07\", \"08\"],\r\n    status: \"Assigning in progress\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"PT3 2022\",\r\n    examType: \"PT3\",\r\n    createdDate: \"18/03/2022 17:16\",\r\n    collectionDate: \"19/03/2022 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [\"07\"],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Completed\" },\r\n      { examCenter: \"02\", status: \"Pending\" },\r\n      { examCenter: \"03\", status: \"Incomplete\" },\r\n    ],\r\n    chiefInvigilatorComplete: false,\r\n    viceChiefInvigilatorComplete: false,\r\n    invigilatorComplete: false,\r\n    environmentalSupervisorComplete: false,\r\n    roomKeeperComplete: false,\r\n    reservedInvigilatorComplete: false,\r\n    assignmentResults: [],\r\n    status: \"Collection data incomplete\",\r\n  },\r\n];\r\n\r\nexport const examSecretaries = [\r\n  {\r\n    id: \"01\",\r\n    school: \"01\",\r\n    username: \"sec01\",\r\n    password: \"123456\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    school: \"02\",\r\n    username: \"sec02\",\r\n    password: \"123456\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    school: \"03\",\r\n    username: \"sec03\",\r\n    password: \"123456\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    school: \"04\",\r\n    username: \"sec04\",\r\n    password: \"123456\",\r\n  },\r\n];\r\n","import React, { Fragment } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst SchoolListModal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        className=\"text-capitalize btn btn-dark\"\r\n        onClick={() => props.toggleModal(true)}\r\n      >\r\n        All registered schools\r\n      </Button>\r\n      <Modal\r\n        show={props.showModal}\r\n        onHide={() => props.toggleModal(false)}\r\n        size=\"lg\"\r\n        scrollable={true}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-12 mb-4\">\r\n              <div className=\"text-left p-1\">\r\n                <div className=\"p-3\">\r\n                  <h4 className=\"mb-2\">Registered Schools</h4>\r\n                  <ul className=\"list-group\">\r\n                    {props.items.map((school) => {\r\n                      return (\r\n                        <li\r\n                          className=\"list-group-item\"\r\n                          key={school.id}\r\n                        >{`${school.schoolCode} - ${school.schoolName} - ${school.examCenters.length} exam center(s)`}</li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              props.toggleModal(false);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SchoolListModal;\r\n"],"sourceRoot":""}