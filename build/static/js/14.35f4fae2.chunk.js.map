{"version":3,"sources":["app/views/users/new_user/newUser.js","app/views/shared/components/ErrorModal.js","fake-db/static_data/LetterTemplate.js","app/views/shared/form/form.js","fake-db/static_data/District.js","app/views/shared/function/generatePassword.js","app/views/users/shared/validation.js"],"names":["connect","state","httpError","error","resetError","setError","reduxForm","form","validate","props","history","useHistory","onConfirm","routeSegments","name","path","className","onSubmit","handleSubmit","values","swal","fire","title","onBeforeOpen","showLoading","onOpen","a","axios","method","url","process","data","then","response","hideLoading","icon","allowOutsideClick","result","push","type","placeholder","helpText","component","renderMultiColumnFormInputField","onClick","change","generateRandomPassword","items","district","defaultOption","renderMultiColumnFormSelect","ErrorModal","show","text","message","tagFieldsOptions","id","value","renderError","meta","touched","formProps","readOnly","input","onChange","map","item","key","renderMultiColumnFormDateTimeField","closeOnSelect","isValidDate","timeFormat","dateFormat","renderMultipleColumnFormExamCentersCheckboxGroup","index","checked","indexOf","event","newValue","target","splice","school","schoolCode","examCenterCode","schoolName","renderInvigilatorOptions","options","option","user","assigningSchoolId","teacherName","renderEditAssignmentResultArrayField","label","fields","invigilator","schoolId","renderMultiColumnFormRichTextEditor","subtitle","content","handleContentChange","renderTagSelectField","removedTag","newLetterContent","letterContent","replace","fieldLength","idx","modifiedTag","newTag","changeFunction","onRemoveTag","renderTagsSelector","length","tag","remove","renderLetterTemplateRadio","Fragment","Check","radioValue","generator","generate","numbers","validateUserAccount","errors","login","password","validateEditAccount","status"],"mappings":"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","file":"static/js/14.35f4fae2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nimport { district } from \"fake-db/static_data/District\";\r\nimport ErrorModal from \"app/views/shared/components/ErrorModal\";\r\nimport {\r\n  renderMultiColumnFormInputField,\r\n  renderMultiColumnFormSelect,\r\n} from \"app/views/shared/form/form\";\r\nimport { setError, resetError } from \"app/redux/actions/ErrorModalActions\";\r\nimport { generateRandomPassword } from \"app/views/shared/function/generatePassword\";\r\nimport { validateUserAccount as validate } from \"../shared/validation\";\r\n\r\nconst NewOfficerAccount = (props) => {\r\n  const history = useHistory();\r\n\r\n  const handleFormSubmit = (values) => {\r\n    swal.fire({\r\n      title: \"Registering new officer account...\",\r\n      onBeforeOpen: () => {\r\n        swal.showLoading();\r\n      },\r\n      onOpen: async () => {\r\n        //submit form process here remember to async and await with try...catch block\r\n        try {\r\n          await axios({\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_BACKEND_URL}/users`,\r\n            data: values,\r\n          }).then((response) => {\r\n            swal.hideLoading();\r\n            swal\r\n              .fire({\r\n                title: \"Successfully register new officer account\",\r\n                icon: \"success\",\r\n                allowOutsideClick: false,\r\n              })\r\n              .then((result) => {\r\n                history.push(\"/user/list\");\r\n              });\r\n          });\r\n        } catch (err) {\r\n          swal.hideLoading();\r\n          props.setError(err);\r\n        }\r\n      },\r\n      allowOutsideClick: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ErrorModal error={props.httpError} onConfirm={props.resetError} />\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"User Management\", path: \"/user\" },\r\n          { name: \"New Officer Account\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n      <div className=\"2-columns-form-layout\">\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header bg-transparent\">\r\n                  <h3 className=\"card-title\"> New Officer Account</h3>\r\n                </div>\r\n                <form onSubmit={props.handleSubmit(handleFormSubmit)}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"login\"\r\n                        type=\"text\"\r\n                        placeholder=\"User Login\"\r\n                        helpText=\"Please enter the user login\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-4\"\r\n                        name=\"password\"\r\n                        type=\"text\"\r\n                        placeholder=\"User Password\"\r\n                        helpText=\"Please enter the user password\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n\r\n                      <div className=\"col-md-2\">\r\n                        <Button\r\n                          className=\"text-capitalize btn btn-dark ms-2\"\r\n                          onClick={() => {\r\n                            props.change(\"password\", generateRandomPassword());\r\n                          }}\r\n                        >\r\n                          Generate Random Password\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"district\"\r\n                        items={district}\r\n                        helpText=\"Please select the district\"\r\n                        defaultOption=\"Please select a district...\"\r\n                        component={renderMultiColumnFormSelect}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"mc-footer\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button type=\"submit\" className=\"btn btn-primary m-1\">\r\n                            Sign up new officer account\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { httpError: state.error.error };\r\n};\r\n\r\nexport default connect(mapStateToProps, { resetError, setError })(\r\n  reduxForm({ form: \"NewOfficerAccount\", validate: validate })(\r\n    NewOfficerAccount\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <SweetAlert\r\n      show={!!props.error}\r\n      title=\"An Error Occured\"\r\n      type=\"error\"\r\n      text={\r\n        props.error\r\n          ? props.error.response\r\n            ? props.error.response.data.message\r\n            : props.error.message\r\n          : \"\"\r\n      }\r\n      onConfirm={() => props.onConfirm()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","export const tagFieldsOptions = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Task Title\",\r\n    value: \"title\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Exam Type\",\r\n    value: \"examType\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Assigned Exam Center Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolName\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    title: \"Assigned School Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolCode\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    title: \"Assigned Exam Center Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.examCenterCode\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    title: \"Role\",\r\n    value: \"assignmentResults[assignmentResultIndex].role\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    title: \"Invigilator Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    title: \"Invigilator IC\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].icNumber\",\r\n  },\r\n];\r\n\r\nexport const LetterTemplates = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Letter for Chief Of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Assignment Letter for Vice Chief of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Vice Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport DateTime from \"react-datetime\";\r\nimport { SimpleCard, RichTextEditor } from \"@gull\";\r\nimport { Field } from \"redux-form\";\r\nimport { tagFieldsOptions } from \"fake-db/static_data/LetterTemplate\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst renderError = (meta) => {\r\n  if (meta.touched && meta.error) {\r\n    return <div className=\"text-danger mt-1 ml-2\">{meta.error}</div>;\r\n  }\r\n};\r\n\r\nexport const renderMultiColumnFormInputField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <input\r\n        readOnly={formProps.readOnly}\r\n        type={formProps.type}\r\n        {...formProps.input}\r\n        placeholder={formProps.placeholder}\r\n        className=\"form-control\"\r\n      ></input>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormSelect = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        className=\"form-control\"\r\n        {...formProps.input}\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        <option value=\"\">{formProps.defaultOption}</option>\r\n        {formProps.items.map((item) => (\r\n          <option key={item.id} value={item.value}>\r\n            {item.title}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormDateTimeField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <DateTime\r\n        name={formProps.name}\r\n        closeOnSelect={true}\r\n        onChange={formProps.input.onChange}\r\n        isValidDate={formProps.isValidDate}\r\n        timeFormat=\"HH:mm\"\r\n        dateFormat=\"DD/MM/YYYY\"\r\n        placeholder={formProps.placeholder}\r\n        value={formProps.input.value}\r\n      />\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultipleColumnFormExamCentersCheckboxGroup = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <label className=\"ul-form__label\">Exam Centers: </label>\r\n      <div className=\"row\">\r\n        {formProps.items.map((item, index) => {\r\n          return (\r\n            <div className=\"form-group col-md-6\" key={index}>\r\n              <label className=\"checkbox checkbox-primary\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={`${formProps.input.name}[${index}]`}\r\n                  value={item.id}\r\n                  checked={formProps.input.value.indexOf(item.id) !== -1}\r\n                  onChange={(event) => {\r\n                    const newValue = [...formProps.input.value];\r\n                    if (event.target.checked) {\r\n                      newValue.push(item.id);\r\n                    } else {\r\n                      newValue.splice(newValue.indexOf(item.id), 1);\r\n                    }\r\n\r\n                    return formProps.input.onChange(newValue);\r\n                  }}\r\n                />\r\n                <span>{`${item.school.schoolCode} - ${item.examCenterCode} - ${item.school.schoolName}`}</span>\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderInvigilatorOptions = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        {...formProps.input}\r\n        className=\"form-control\"\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        {formProps.options.map((option) => {\r\n          return (\r\n            option.user.school.id !== formProps.assigningSchoolId && (\r\n              <option key={option.id} value={option.id}>\r\n                {`${option.teacherName} - ${option.user.school.schoolCode}`}\r\n              </option>\r\n            )\r\n          );\r\n        })}\r\n      </select>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderEditAssignmentResultArrayField = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <label className=\"ul-form__label\">{formProps.label}</label>\r\n      <div className=\"row\">\r\n        {formProps.fields.map((invigilator, index) => {\r\n          return (\r\n            <Field\r\n              key={invigilator}\r\n              className=\"col-lg-12\"\r\n              name={invigilator}\r\n              options={formProps.options}\r\n              assigningSchoolId={formProps.schoolId}\r\n              component={renderInvigilatorOptions}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormRichTextEditor = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <SimpleCard title={formProps.title} subtitle={formProps.subtitle}>\r\n        <RichTextEditor\r\n          {...formProps.input}\r\n          content={formProps.input.value}\r\n          handleContentChange={formProps.input.onChange}\r\n          placeholder={formProps.placeholder}\r\n        />\r\n      </SimpleCard>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderTagSelectField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <div className=\"row\">\r\n        <label className=\"ul-form__label ul-form--margin col-lg-1 col-form-label \">\r\n          {formProps.label}\r\n        </label>\r\n        <div className=\"col-lg-8\">\r\n          <select\r\n            className=\"form-control\"\r\n            {...formProps.input}\r\n            onChange={formProps.input.onChange}\r\n          >\r\n            <option value=\"\">{formProps.defaultOption}</option>\r\n            {formProps.items.map((item) => (\r\n              <option key={item.id} value={item.value}>\r\n                {item.title}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger m-1\"\r\n            onClick={() => {\r\n              const removedTag = \"&lt;\" + (formProps.index + 1) + \"&gt;\";\r\n              let newLetterContent = formProps.letterContent.replace(\r\n                removedTag,\r\n                \"\"\r\n              );\r\n              if (formProps.index < formProps.fieldLength) {\r\n                for (\r\n                  var idx = formProps.index + 1;\r\n                  idx < formProps.fieldLength;\r\n                  idx++\r\n                ) {\r\n                  const modifiedTag = \"&lt;\" + (idx + 1) + \"&gt;\";\r\n                  const newTag = \"&lt;\" + idx + \"&gt;\";\r\n                  newLetterContent = newLetterContent.replace(\r\n                    modifiedTag,\r\n                    newTag\r\n                  );\r\n                }\r\n              }\r\n              formProps.changeFunction(\"content\", newLetterContent);\r\n              formProps.onRemoveTag(formProps.index);\r\n            }}\r\n          >\r\n            Remove Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderTagsSelector = (formProps) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-secondary m-1\"\r\n          onClick={() => {\r\n            formProps.fields.push({});\r\n            let newLetterContent;\r\n            if (formProps.letterContent) {\r\n              newLetterContent =\r\n                formProps.letterContent +\r\n                \"&lt;\" +\r\n                (formProps.fields.length + 1) +\r\n                \"&gt;\";\r\n            } else {\r\n              newLetterContent =\r\n                \"&lt;\" + (formProps.fields.length + 1) + \"&gt;\";\r\n            }\r\n            formProps.changeFunction(\"content\", newLetterContent);\r\n          }}\r\n        >\r\n          Add New Tag\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"custom-separator\"></div>\r\n\r\n      {formProps.fields.map((tag, index) => (\r\n        <Field\r\n          key={index}\r\n          className=\"col-md-12\"\r\n          label={`<${index + 1}>`}\r\n          name={`${tag}.value`}\r\n          component={renderTagSelectField}\r\n          defaultOption=\"Please select a field\"\r\n          onRemoveTag={formProps.fields.remove}\r\n          changeFunction={formProps.changeFunction}\r\n          letterContent={formProps.letterContent}\r\n          index={index}\r\n          fieldLength={formProps.fields.length}\r\n          items={tagFieldsOptions}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderLetterTemplateRadio = (formProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.Check\r\n        type=\"radio\"\r\n        label={formProps.label}\r\n        {...formProps.input}\r\n        value={formProps.radioValue}\r\n      />\r\n      {renderError(formProps.meta)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","export const district = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Batu Pahat\",\r\n    value: \"Batu Pahat\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Johor Bahru\",\r\n    value: \"Johor Bahru\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    title: \"Kluang\",\r\n    value: \"Kluang\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Kota Tinggi\",\r\n    value: \"Kota Tinggi\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    title: \"Kulai\",\r\n    value: \"Kulai\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    title: \"Mersing\",\r\n    value: \"Mersing\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    title: \"Muar\",\r\n    value: \"Muar\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    title: \"Pontian\",\r\n    value: \"Pontian\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    title: \"Segamat\",\r\n    value: \"Segamat\",\r\n  },\r\n  {\r\n    id: \"10\",\r\n    title: \"Tangkak\",\r\n    value: \"Tangkak\",\r\n  },\r\n];\r\n","import generator from \"generate-password\";\r\n\r\nexport const generateRandomPassword = () => {\r\n  return generator.generate({ length: 10, numbers: true });\r\n};\r\n","export const validateUserAccount = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.login) {\r\n    errors.login = \"Please enter the user login\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Please enter the user password\";\r\n  }\r\n  if (!values.district) {\r\n    errors.district = \"Please select a district\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateEditAccount = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.login) {\r\n    errors.login = \"Please enter the user login\";\r\n  }\r\n\r\n  if (!values.district) {\r\n    errors.district = \"Please select a district\";\r\n  }\r\n\r\n  if (!values.status) {\r\n    errors.status = \"Please select a status\";\r\n  }\r\n  return errors;\r\n};\r\n"],"sourceRoot":""}