{"version":3,"sources":["../node_modules/react-bootstrap/esm/Badge.js","app/views/assignment_tasks/assignment_result_summary/AssignmentResultSummary.js","app/views/shared/components/ErrorModal.js","app/views/shared/components/Loader.js","app/views/assignment_tasks/shared/components/AssignmentTaskInfoHeader.js","app/views/assignment_tasks/shared/components/PopOver.js","app/views/assignment_tasks/shared/components/AssignmentResultTable.js"],"names":["Badge","React","ref","bsPrefix","bg","pill","text","className","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","connect","state","assignmentTask","assignmentResultSummary","result","httpError","error","loading","getAssignmentResultSummary","resetError","role","useParams","taskId","useEffect","onConfirm","routeSegments","name","path","title","_","startCase","results","ErrorModal","show","type","response","data","message","styles","position","left","right","top","margin","height","width","zIndex","loaderOverlay","backgroundColor","Loader","style","AssignmentTaskInfoHeader","Fragment","status","renderStatus","moment","collectionDate","ISO_8601","format","createdDate","PopOver","OverlayTrigger","trigger","placement","overlay","Popover","id","Header","Body","schoolCode","schoolName","popover","invigilator","user","school","delay","hide","teacherName","AssignmentResultTable","sortableColumn","dataField","sort","formatter","cell","row","rowIndex","sortValue","paginationOptions","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","length","striped","keyField","columns","search","baseProps","bootstrap4","pagination","paginationFactory","noDataIndication","wrapperClasses"],"mappings":"+NAQMA,EAAqBC,cAAiB,WAQzCC,GAAQ,IAPTC,EAOS,EAPTA,SACAC,EAMS,EANTA,GACAC,EAKS,EALTA,KACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,UAGS,IAFTC,GAAIC,OAEK,MAFO,OAEP,EADNC,EACM,iBACHC,EAASC,YAAmBT,EAAU,SAC5C,OAAoBU,cAAKJ,EAAD,YAAC,aACvBP,IAAKA,GACFQ,GAFmB,IAGtBH,UAAWO,IAAWP,EAAWI,EAAQN,GAAQ,eAAgBC,GAAQ,QAAJ,OAAYA,GAAQF,GAAM,MAAJ,OAAUA,UAGzGJ,EAAMe,YAAc,QACpBf,EAAMgB,aArBe,CACnBZ,GAAI,UACJC,MAAM,GAoBOL,O,kCC1Bf,yHA0DeiB,uBAXS,SAACC,GACvB,MAAO,CACLC,eAAgBD,EAAME,wBAAwBC,OAAOF,eACjDD,EAAME,wBAAwBC,OAAOF,eACrC,GACJE,OAAQH,EAAME,wBAAwBC,OACtCC,UAAWJ,EAAMK,MAAMA,MACvBC,QAASN,EAAMM,QAAQA,WAIa,CACtCC,+BACAC,gBAFaT,EA7CiB,SAACP,GAC/B,IAAMiB,EAAOC,cAAYD,KACnBE,EAASD,cAAYC,OAM3B,OAJAC,qBAAU,WACRpB,EAAMe,2BAA2BE,EAAME,KACtC,IAGD,6BACGnB,EAAMc,SAAW,kBAAC,IAAD,MAClB,kBAAC,IAAD,CAAYD,MAAOb,EAAMY,UAAWS,UAAWrB,EAAMgB,aACrD,kBAAC,IAAD,CACEM,cAAe,CACb,CAAEC,KAAM,mBAAoBC,KAAM,eAClC,CAAED,KAAM,wBAAyBC,KAAM,oBACvC,CAAED,KAAMvB,EAAMS,eAAegB,MAAOD,KAAK,eAAD,OAAiBL,IACzD,CAAEI,KAAM,mCAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAA0Bd,eAAgBT,EAAMS,iBAEhD,yBAAKZ,UAAU,qBAEf,6DAAmC6B,IAAEC,UAAUV,IAC/C,kBAAC,IAAD,CACEW,QAAS5B,EAAMW,OAAOiB,QAAU5B,EAAMW,OAAOiB,QAAU,W,iCCxCjE,sCAqBeC,IAlBI,SAAC7B,GAClB,OACE,kBAAC,IAAD,CACE8B,OAAQ9B,EAAMa,MACdY,MAAM,mBACNM,KAAK,QACLnC,KACEI,EAAMa,MACFb,EAAMa,MAAMmB,SACVhC,EAAMa,MAAMmB,SAASC,KAAKC,QAC1BlC,EAAMa,MAAMqB,QACd,GAENb,UAAW,kBAAMrB,EAAMqB,iB,iCChB7B,oBAEMc,EAAS,CACbC,SAAU,QACVC,KAAM,EACNC,MAAO,EACPC,IAAK,mBACLC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,WAGJC,EAAgB,CACpBR,SAAU,QACVC,KAAM,EACNE,IAAK,EACLE,OAAQ,OACRC,MAAO,OACPC,OAAQ,UACRE,gBAAiB,SAaJC,IAVA,WACb,OACE,yBAAKC,MAAOH,GACV,yBAAKG,MAAOZ,GACV,yBAAKtC,UAAU,sD,iCC3BvB,+CA0EemD,IAtEkB,SAAC,GAAwB,IAAtBvC,EAAqB,EAArBA,eA6BlC,OACE,kBAAC,IAAMwC,SAAP,KACE,wBAAIpD,UAAU,QAAd,+BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,wBAAb,SACA,8BAAOY,EAAegB,SAG1B,yBAAK5B,UAAU,YACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,wBAAb,UAxCW,WACnB,OAAQY,EAAeyC,QACrB,IAAK,yBACH,OACE,kBAAC,IAAD,CAAOrD,UAAU,0CACdY,EAAeyC,QAGtB,IAAK,6BACH,OACE,kBAAC,IAAD,CAAOrD,UAAU,yCACdY,EAAeyC,QAGtB,IAAK,wBACH,OACE,kBAAC,IAAD,CAAOrD,UAAU,4CACdY,EAAeyC,QAGtB,QACE,OACE,kBAAC,IAAD,CAAOrD,UAAU,0CACdY,EAAeyC,SAkBfC,KAGL,yBAAKtD,UAAU,YACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,wBAAb,4BACA,8BACGuD,IAAO3C,EAAe4C,eAAgBD,IAAOE,UAAUC,OACtD,uBAKR,yBAAK1D,UAAU,YACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,wBAAb,gBACA,8BACGuD,IAAO3C,EAAe+C,YAAaJ,IAAOE,UAAUC,OACnD,2B,6HCtCDE,EAxBC,SAACzD,GASf,OACE,kBAAC0D,EAAA,EAAD,CACEC,QAAQ,QACRC,UAAU,OACVC,QAZY,SAAC7D,GAAD,OACd,kBAAC8D,EAAA,EAAD,eAASC,GAAG,iBAAoB/D,GAC9B,kBAAC8D,EAAA,EAAQE,OAAT,CAAgBlE,GAAG,MAAnB,+BACA,kBAACgE,EAAA,EAAQG,KAAT,qBACgBjE,EAAMkE,WADtB,IACkC,6BADlC,gBACyDlE,EAAMmE,aAQtDC,CAAQ,CACfF,WAAYlE,EAAMqE,YAAYC,KAAKC,OAAOL,WAC1CC,WAAYnE,EAAMqE,YAAYC,KAAKC,OAAOJ,aAE5CK,MAAO,CAAE1C,KAAM,IAAK2C,KAAM,MAE1B,6BAAMzE,EAAMqE,YAAYK,eCwEfC,IAtFe,SAAC,GAAiB,IAAf/C,EAAc,EAAdA,QAKzBgD,EAAiB,CACrB,CACEC,UAAW,QACXjF,KAAM,KACNkF,MAAM,GAER,CACED,UAAW,+BACXjF,KAAM,uBACNkF,MAAM,GAER,CACED,UAAW,4BACXjF,KAAM,4BACNkF,MAAM,GAER,CACED,UAAW,+BACXjF,KAAM,uBACNkF,MAAM,GAER,CACED,UAAW,cACXjF,KAAM,cACNkF,MAAM,EACNC,UA7BkB,SAACC,EAAMC,EAAKC,GAChC,OAAO,kBAAC,EAAD,CAASb,YAAaW,KA6B3BG,UAAW,SAACH,EAAMC,GAAP,OAAeD,EAAKN,cAEjC,CACEG,UAAW,uBACXjF,KAAM,QAER,CACEiF,UAAW,yBACXjF,KAAM,SACNkF,MAAM,GAER,CACED,UAAW,kCACXjF,KAAM,UAIJwF,EAAoB,CACxBC,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWpE,EAAQqE,QAGrB,OACE,kBAAC,IAAD,CACEC,SAAO,EACPC,SAAS,QACTlE,KAAML,EACNwE,QAASxB,EACTyB,QAAM,IAEL,SAACrG,GAAD,OACC,oCACE,kBAAC,IAAD,iBACMA,EAAMsG,UADZ,CAEEC,YAAU,EACVC,WAAYC,IAAkBrB,GAC9BsB,iBAAkB,iBAClBC,eAAe","file":"static/js/27.867009d9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Breadcrumb, SimpleCard } from \"@gull\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport ErrorModal from \"app/views/shared/components/ErrorModal\";\r\nimport Loader from \"app/views/shared/components/Loader\";\r\nimport AssignmentTaskInfoHeader from \"../shared/components/AssignmentTaskInfoHeader\";\r\nimport AssignmentResultTable from \"../shared/components/AssignmentResultTable\";\r\nimport { resetError } from \"app/redux/actions/ErrorModalActions\";\r\nimport { getAssignmentResultSummary } from \"app/redux/actions/AssignmentResultSummaryActions\";\r\n\r\nconst AssignmentResultSummary = (props) => {\r\n  const role = useParams().role;\r\n  const taskId = useParams().taskId;\r\n\r\n  useEffect(() => {\r\n    props.getAssignmentResultSummary(role, taskId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {props.loading && <Loader></Loader>}\r\n      <ErrorModal error={props.httpError} onConfirm={props.resetError} />\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Assignment Tasks\", path: \"/assignment\" },\r\n          { name: \"Assignment Tasks List\", path: \"/assignment/list\" },\r\n          { name: props.assignmentTask.title, path: `/assignment/${taskId}` },\r\n          { name: \"Summary of Assignment Result\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n      <SimpleCard>\r\n        <AssignmentTaskInfoHeader assignmentTask={props.assignmentTask} />\r\n\r\n        <div className=\"custom-separator\"></div>\r\n\r\n        <h4>Summary of Assignment Result: {_.startCase(role)}</h4>\r\n        <AssignmentResultTable\r\n          results={props.result.results ? props.result.results : []}\r\n        />\r\n      </SimpleCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    assignmentTask: state.assignmentResultSummary.result.assignmentTask\r\n      ? state.assignmentResultSummary.result.assignmentTask\r\n      : {},\r\n    result: state.assignmentResultSummary.result,\r\n    httpError: state.error.error,\r\n    loading: state.loading.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAssignmentResultSummary,\r\n  resetError,\r\n})(AssignmentResultSummary);\r\n","import React from \"react\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <SweetAlert\r\n      show={!!props.error}\r\n      title=\"An Error Occured\"\r\n      type=\"error\"\r\n      text={\r\n        props.error\r\n          ? props.error.response\r\n            ? props.error.response.data.message\r\n            : props.error.message\r\n          : \"\"\r\n      }\r\n      onConfirm={() => props.onConfirm()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  right: 0,\r\n  top: \"calc(50% - 20px)\",\r\n  margin: \"auto\",\r\n  height: \"40px\",\r\n  width: \"40px\",\r\n  zIndex: 324324324,\r\n};\r\n\r\nconst loaderOverlay = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  top: 0,\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  zIndex: 324324323,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div style={loaderOverlay}>\r\n      <div style={styles}>\r\n        <div className=\"spinner spinner-bubble spinner-bubble-primary\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst AssignmentTaskInfoHeader = ({ assignmentTask }) => {\r\n  const renderStatus = () => {\r\n    switch (assignmentTask.status) {\r\n      case \"Collection in progress\":\r\n        return (\r\n          <Badge className=\"bg-primary rounded-pill text-white p-2\">\r\n            {assignmentTask.status}\r\n          </Badge>\r\n        );\r\n      case \"Collection data incomplete\":\r\n        return (\r\n          <Badge className=\"bg-danger rounded-pill text-white p-2\">\r\n            {assignmentTask.status}\r\n          </Badge>\r\n        );\r\n      case \"Assigning in progress\":\r\n        return (\r\n          <Badge className=\"bg-secondary rounded-pill text-white p-2\">\r\n            {assignmentTask.status}\r\n          </Badge>\r\n        );\r\n      default:\r\n        return (\r\n          <Badge className=\"bg-success rounded-pill text-white p-2\">\r\n            {assignmentTask.status}\r\n          </Badge>\r\n        );\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h4 className=\"mb-4\">Assignment Task Information</h4>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-primary mb-1 h5\">Title</p>\r\n            <span>{assignmentTask.title}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-primary mb-1 h5\">Status</p>\r\n            {renderStatus()}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-primary mb-1 h5\">Data Collection Deadline</p>\r\n            <span>\r\n              {moment(assignmentTask.collectionDate, moment.ISO_8601).format(\r\n                \"DD/MM/YYYY HH:mm\"\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-primary mb-1 h5\">Created Date</p>\r\n            <span>\r\n              {moment(assignmentTask.createdDate, moment.ISO_8601).format(\r\n                \"DD/MM/YYYY HH:mm\"\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AssignmentTaskInfoHeader;\r\n","import React from \"react\";\r\nimport { Button, Popover, OverlayTrigger } from \"react-bootstrap\";\r\nconst PopOver = (props) => {\r\n  const popover = (props) => (\r\n    <Popover id=\"popover-basic\" {...props}>\r\n      <Popover.Header as=\"h3\">Original School Information</Popover.Header>\r\n      <Popover.Body>\r\n        School Code: {props.schoolCode} <br></br>School Name: {props.schoolName}\r\n      </Popover.Body>\r\n    </Popover>\r\n  );\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"hover\"\r\n      placement=\"auto\"\r\n      overlay={popover({\r\n        schoolCode: props.invigilator.user.school.schoolCode,\r\n        schoolName: props.invigilator.user.school.schoolName,\r\n      })}\r\n      delay={{ show: 250, hide: 400 }}\r\n    >\r\n      <div>{props.invigilator.teacherName}</div>\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default PopOver;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport PopOver from \"./PopOver\";\r\n\r\nconst AssignmentResultTable = ({ results }) => {\r\n  const renderPopOver = (cell, row, rowIndex) => {\r\n    return <PopOver invigilator={cell} />;\r\n  };\r\n  \r\n  const sortableColumn = [\r\n    {\r\n      dataField: \"index\",\r\n      text: \"No\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"examCenter.school.schoolCode\",\r\n      text: \"Assigned School Code\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"examCenter.examCenterCode\",\r\n      text: \"Assigned Exam Center Code\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"examCenter.school.schoolName\",\r\n      text: \"Assigned School Name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"invigilator\",\r\n      text: \"Invigilator\",\r\n      sort: true,\r\n      formatter: renderPopOver,\r\n      sortValue: (cell, row) => cell.teacherName,\r\n    },\r\n    {\r\n      dataField: \"invigilator.icNumber\",\r\n      text: \"I.C.\",\r\n    },\r\n    {\r\n      dataField: \"invigilator.teacherSex\",\r\n      text: \"Gender\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"invigilator.teacherEmailAddress\",\r\n      text: \"Email\",\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: \"First\",\r\n    prePageText: \"Back\",\r\n    nextPageText: \"Next\",\r\n    lastPageText: \"Last\",\r\n    nextPageTitle: \"First page\",\r\n    prePageTitle: \"Pre page\",\r\n    firstPageTitle: \"Next page\",\r\n    lastPageTitle: \"Last page\",\r\n    showTotal: true,\r\n    totalSize: results.length,\r\n  };\r\n\r\n  return (\r\n    <ToolkitProvider\r\n      striped\r\n      keyField=\"index\"\r\n      data={results}\r\n      columns={sortableColumn}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <>\r\n          <BootstrapTable\r\n            {...props.baseProps}\r\n            bootstrap4\r\n            pagination={paginationFactory(paginationOptions)}\r\n            noDataIndication={\"Table is empty\"}\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n        </>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n};\r\n\r\nexport default AssignmentResultTable;\r\n"],"sourceRoot":""}