{"version":3,"sources":["app/views/users/edit_user_account/EditAccountInformation.js","app/views/shared/components/ErrorModal.js","app/views/shared/components/Loader.js","fake-db/static_data/LetterTemplate.js","app/views/shared/form/form.js","fake-db/static_data/District.js","app/views/users/shared/validation.js"],"names":["connect","state","initialValues","editAccountInformation","account","httpError","error","loading","resetError","setError","initializeForm","reduxForm","form","validate","enableReinitialize","props","history","useHistory","accountId","useParams","id","useEffect","onConfirm","routeSegments","name","path","className","onSubmit","handleSubmit","values","swal","fire","title","onBeforeOpen","showLoading","onOpen","a","axios","method","url","process","data","then","response","hideLoading","icon","allowOutsideClick","result","push","readOnly","type","placeholder","helpText","component","renderMultiColumnFormInputField","items","district","defaultOption","renderMultiColumnFormSelect","value","ErrorModal","show","text","message","styles","position","left","right","top","margin","height","width","zIndex","loaderOverlay","backgroundColor","Loader","style","tagFieldsOptions","renderError","meta","touched","formProps","input","onChange","map","item","key","renderMultiColumnFormDateTimeField","closeOnSelect","isValidDate","timeFormat","dateFormat","renderMultipleColumnFormExamCentersCheckboxGroup","index","checked","indexOf","event","newValue","target","splice","school","schoolCode","examCenterCode","schoolName","renderInvigilatorOptions","options","option","user","assigningSchoolId","teacherName","renderEditAssignmentResultArrayField","label","fields","invigilator","schoolId","renderMultiColumnFormRichTextEditor","subtitle","content","handleContentChange","renderTagSelectField","onClick","removedTag","newLetterContent","letterContent","replace","fieldLength","idx","modifiedTag","newTag","changeFunction","onRemoveTag","renderTagsSelector","length","tag","remove","renderLetterTemplateRadio","Fragment","Check","radioValue","validateUserAccount","errors","login","password","validateEditAccount","status"],"mappings":"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","file":"static/js/26.1f108224.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nimport { district } from \"fake-db/static_data/District\";\r\nimport Loader from \"app/views/shared/components/Loader\";\r\nimport ErrorModal from \"app/views/shared/components/ErrorModal\";\r\nimport {\r\n  renderMultiColumnFormInputField,\r\n  renderMultiColumnFormSelect,\r\n} from \"app/views/shared/form/form\";\r\nimport { setError, resetError } from \"app/redux/actions/ErrorModalActions\";\r\nimport { initializeForm } from \"app/redux/actions/EditAccountInformationActions\";\r\nimport { validateEditAccount as validate } from \"../shared/validation\";\r\n\r\nconst EditAccountInformation = (props) => {\r\n  const history = useHistory();\r\n  const accountId = useParams().id;\r\n\r\n  useEffect(() => {\r\n    props.initializeForm(accountId);\r\n  }, []);\r\n\r\n  const handleFormSubmit = (values) => {\r\n    swal.fire({\r\n      title: \"Saving Changes...\",\r\n      onBeforeOpen: () => {\r\n        swal.showLoading();\r\n      },\r\n      onOpen: async () => {\r\n        //submit form process here remember to async and await with try...catch block\r\n        try {\r\n          await axios({\r\n            method: \"PATCH\",\r\n            url: `${process.env.REACT_APP_BACKEND_URL}/users/officer/${accountId}`,\r\n            data: values,\r\n          }).then((response) => {\r\n            swal.hideLoading();\r\n            swal\r\n              .fire({\r\n                title: \"Successfully edit the officer account\",\r\n                icon: \"success\",\r\n                allowOutsideClick: false,\r\n              })\r\n              .then((result) => {\r\n                history.push(\"/user/list\");\r\n              });\r\n          });\r\n        } catch (err) {\r\n          swal.hideLoading();\r\n          props.setError(err);\r\n        }\r\n      },\r\n      allowOutsideClick: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.loading && <Loader></Loader>}\r\n      <ErrorModal error={props.httpError} onConfirm={props.resetError} />\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"User Management\", path: \"/user\" },\r\n          { name: \"Officer Accounts List\", path: \"/user/list\" },\r\n          { name: \"Edit Officer Account\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n      <div className=\"2-columns-form-layout\">\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header bg-transparent\">\r\n                  <h3 className=\"card-title\"> Edit Officer Account</h3>\r\n                </div>\r\n                <form onSubmit={props.handleSubmit(handleFormSubmit)}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"login\"\r\n                        readOnly=\"true\"\r\n                        type=\"text\"\r\n                        placeholder=\"User Login\"\r\n                        helpText=\"Please enter the user login\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"district\"\r\n                        items={district}\r\n                        helpText=\"Please select the district\"\r\n                        defaultOption=\"Please select a district...\"\r\n                        component={renderMultiColumnFormSelect}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"status\"\r\n                        items={[\r\n                          { id: \"01\", title: \"Active\", value: 1 },\r\n                          { id: \"02\", title: \"Inactive\", value: 0 },\r\n                        ]}\r\n                        helpText=\"Please select the status\"\r\n                        defaultOption=\"Please select a status...\"\r\n                        component={renderMultiColumnFormSelect}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"mc-footer\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button type=\"submit\" className=\"btn btn-primary m-1\">\r\n                            Save Changes\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: state.editAccountInformation.account,\r\n    httpError: state.error.error,\r\n    loading: state.loading.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resetError,\r\n  setError,\r\n  initializeForm,\r\n})(\r\n  reduxForm({\r\n    form: \"EditAccountInformation\",\r\n    validate: validate,\r\n    enableReinitialize: true,\r\n  })(EditAccountInformation)\r\n);\r\n","import React from \"react\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <SweetAlert\r\n      show={!!props.error}\r\n      title=\"An Error Occured\"\r\n      type=\"error\"\r\n      text={\r\n        props.error\r\n          ? props.error.response\r\n            ? props.error.response.data.message\r\n            : props.error.message\r\n          : \"\"\r\n      }\r\n      onConfirm={() => props.onConfirm()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  right: 0,\r\n  top: \"calc(50% - 20px)\",\r\n  margin: \"auto\",\r\n  height: \"40px\",\r\n  width: \"40px\",\r\n  zIndex: 324324324,\r\n};\r\n\r\nconst loaderOverlay = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  top: 0,\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  zIndex: 324324323,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div style={loaderOverlay}>\r\n      <div style={styles}>\r\n        <div className=\"spinner spinner-bubble spinner-bubble-primary\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const tagFieldsOptions = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Task Title\",\r\n    value: \"title\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Exam Type\",\r\n    value: \"examType\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Assigned Exam Center Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolName\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    title: \"Assigned School Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolCode\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    title: \"Assigned Exam Center Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.examCenterCode\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    title: \"Role\",\r\n    value: \"assignmentResults[assignmentResultIndex].role\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    title: \"Invigilator Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    title: \"Invigilator IC\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].icNumber\",\r\n  },\r\n];\r\n\r\nexport const LetterTemplates = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Letter for Chief Of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Assignment Letter for Vice Chief of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Vice Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport DateTime from \"react-datetime\";\r\nimport { SimpleCard, RichTextEditor } from \"@gull\";\r\nimport { Field } from \"redux-form\";\r\nimport { tagFieldsOptions } from \"fake-db/static_data/LetterTemplate\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst renderError = (meta) => {\r\n  if (meta.touched && meta.error) {\r\n    return <div className=\"text-danger mt-1 ml-2\">{meta.error}</div>;\r\n  }\r\n};\r\n\r\nexport const renderMultiColumnFormInputField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <input\r\n        readOnly={formProps.readOnly}\r\n        type={formProps.type}\r\n        {...formProps.input}\r\n        placeholder={formProps.placeholder}\r\n        className=\"form-control\"\r\n      ></input>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormSelect = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        className=\"form-control\"\r\n        {...formProps.input}\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        <option value=\"\">{formProps.defaultOption}</option>\r\n        {formProps.items.map((item) => (\r\n          <option key={item.id} value={item.value}>\r\n            {item.title}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormDateTimeField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <DateTime\r\n        name={formProps.name}\r\n        closeOnSelect={true}\r\n        onChange={formProps.input.onChange}\r\n        isValidDate={formProps.isValidDate}\r\n        timeFormat=\"HH:mm\"\r\n        dateFormat=\"DD/MM/YYYY\"\r\n        placeholder={formProps.placeholder}\r\n        value={formProps.input.value}\r\n      />\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultipleColumnFormExamCentersCheckboxGroup = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <label className=\"ul-form__label\">Exam Centers: </label>\r\n      <div className=\"row\">\r\n        {formProps.items.map((item, index) => {\r\n          return (\r\n            <div className=\"form-group col-md-6\" key={index}>\r\n              <label className=\"checkbox checkbox-primary\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={`${formProps.input.name}[${index}]`}\r\n                  value={item.id}\r\n                  checked={formProps.input.value.indexOf(item.id) !== -1}\r\n                  onChange={(event) => {\r\n                    const newValue = [...formProps.input.value];\r\n                    if (event.target.checked) {\r\n                      newValue.push(item.id);\r\n                    } else {\r\n                      newValue.splice(newValue.indexOf(item.id), 1);\r\n                    }\r\n\r\n                    return formProps.input.onChange(newValue);\r\n                  }}\r\n                />\r\n                <span>{`${item.school.schoolCode} - ${item.examCenterCode} - ${item.school.schoolName}`}</span>\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderInvigilatorOptions = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        {...formProps.input}\r\n        className=\"form-control\"\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        {formProps.options.map((option) => {\r\n          return (\r\n            option.user.school.id !== formProps.assigningSchoolId && (\r\n              <option key={option.id} value={option.id}>\r\n                {`${option.teacherName} - ${option.user.school.schoolCode}`}\r\n              </option>\r\n            )\r\n          );\r\n        })}\r\n      </select>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderEditAssignmentResultArrayField = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <label className=\"ul-form__label\">{formProps.label}</label>\r\n      <div className=\"row\">\r\n        {formProps.fields.map((invigilator, index) => {\r\n          return (\r\n            <Field\r\n              key={invigilator}\r\n              className=\"col-lg-12\"\r\n              name={invigilator}\r\n              options={formProps.options}\r\n              assigningSchoolId={formProps.schoolId}\r\n              component={renderInvigilatorOptions}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormRichTextEditor = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <SimpleCard title={formProps.title} subtitle={formProps.subtitle}>\r\n        <RichTextEditor\r\n          {...formProps.input}\r\n          content={formProps.input.value}\r\n          handleContentChange={formProps.input.onChange}\r\n          placeholder={formProps.placeholder}\r\n        />\r\n      </SimpleCard>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderTagSelectField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <div className=\"row\">\r\n        <label className=\"ul-form__label ul-form--margin col-lg-1 col-form-label \">\r\n          {formProps.label}\r\n        </label>\r\n        <div className=\"col-lg-8\">\r\n          <select\r\n            className=\"form-control\"\r\n            {...formProps.input}\r\n            onChange={formProps.input.onChange}\r\n          >\r\n            <option value=\"\">{formProps.defaultOption}</option>\r\n            {formProps.items.map((item) => (\r\n              <option key={item.id} value={item.value}>\r\n                {item.title}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger m-1\"\r\n            onClick={() => {\r\n              const removedTag = \"&lt;\" + (formProps.index + 1) + \"&gt;\";\r\n              let newLetterContent = formProps.letterContent.replace(\r\n                removedTag,\r\n                \"\"\r\n              );\r\n              if (formProps.index < formProps.fieldLength) {\r\n                for (\r\n                  var idx = formProps.index + 1;\r\n                  idx < formProps.fieldLength;\r\n                  idx++\r\n                ) {\r\n                  const modifiedTag = \"&lt;\" + (idx + 1) + \"&gt;\";\r\n                  const newTag = \"&lt;\" + idx + \"&gt;\";\r\n                  newLetterContent = newLetterContent.replace(\r\n                    modifiedTag,\r\n                    newTag\r\n                  );\r\n                }\r\n              }\r\n              formProps.changeFunction(\"content\", newLetterContent);\r\n              formProps.onRemoveTag(formProps.index);\r\n            }}\r\n          >\r\n            Remove Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderTagsSelector = (formProps) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-secondary m-1\"\r\n          onClick={() => {\r\n            formProps.fields.push({});\r\n            let newLetterContent;\r\n            if (formProps.letterContent) {\r\n              newLetterContent =\r\n                formProps.letterContent +\r\n                \"&lt;\" +\r\n                (formProps.fields.length + 1) +\r\n                \"&gt;\";\r\n            } else {\r\n              newLetterContent =\r\n                \"&lt;\" + (formProps.fields.length + 1) + \"&gt;\";\r\n            }\r\n            formProps.changeFunction(\"content\", newLetterContent);\r\n          }}\r\n        >\r\n          Add New Tag\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"custom-separator\"></div>\r\n\r\n      {formProps.fields.map((tag, index) => (\r\n        <Field\r\n          key={index}\r\n          className=\"col-md-12\"\r\n          label={`<${index + 1}>`}\r\n          name={`${tag}.value`}\r\n          component={renderTagSelectField}\r\n          defaultOption=\"Please select a field\"\r\n          onRemoveTag={formProps.fields.remove}\r\n          changeFunction={formProps.changeFunction}\r\n          letterContent={formProps.letterContent}\r\n          index={index}\r\n          fieldLength={formProps.fields.length}\r\n          items={tagFieldsOptions}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderLetterTemplateRadio = (formProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.Check\r\n        type=\"radio\"\r\n        label={formProps.label}\r\n        {...formProps.input}\r\n        value={formProps.radioValue}\r\n      />\r\n      {renderError(formProps.meta)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","export const district = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Batu Pahat\",\r\n    value: \"Batu Pahat\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Johor Bahru\",\r\n    value: \"Johor Bahru\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    title: \"Kluang\",\r\n    value: \"Kluang\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Kota Tinggi\",\r\n    value: \"Kota Tinggi\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    title: \"Kulai\",\r\n    value: \"Kulai\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    title: \"Mersing\",\r\n    value: \"Mersing\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    title: \"Muar\",\r\n    value: \"Muar\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    title: \"Pontian\",\r\n    value: \"Pontian\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    title: \"Segamat\",\r\n    value: \"Segamat\",\r\n  },\r\n  {\r\n    id: \"10\",\r\n    title: \"Tangkak\",\r\n    value: \"Tangkak\",\r\n  },\r\n];\r\n","export const validateUserAccount = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.login) {\r\n    errors.login = \"Please enter the user login\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Please enter the user password\";\r\n  }\r\n  if (!values.district) {\r\n    errors.district = \"Please select a district\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateEditAccount = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.login) {\r\n    errors.login = \"Please enter the user login\";\r\n  }\r\n\r\n  if (!values.district) {\r\n    errors.district = \"Please select a district\";\r\n  }\r\n\r\n  if (!values.status) {\r\n    errors.status = \"Please select a status\";\r\n  }\r\n  return errors;\r\n};\r\n"],"sourceRoot":""}