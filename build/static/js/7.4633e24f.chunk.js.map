{"version":3,"sources":["../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/redux-form/es/formValueSelector.js","../node_modules/redux-form/es/createFormValueSelector.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js"],"names":["_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","Button","React","_ref","ref","asProp","as","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","Component","_jsx","displayName","usePrevious","value","useRef","useEffect","current","dataAttr","property","dataProp","useCommittedRef","useEventCallback","fn","useCallback","apply","arguments","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","bsPrefix","variant","size","active","className","prefix","useBootstrapPrefix","classNames","defaultProps","createFormValueSelector","getIn","form","getFormState","invariant","nonNullGetFormState","state","_len","fields","Array","_key","reduce","accumulator","field","plain","setIn","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","nodeName","e","useWillUnmount","onUnmount","valueRef","useUpdatedRef","manager","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","Math","abs","window","innerWidth","documentElement","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","modal","modalIdx","push","setModalAttributes","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","useModalManager","provided","modalManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","useWaitForDOMRef","isMounted","useMounted","prevShow","useState","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","appear","unmountOnExit","in","backdropElement","BackdropTransition","_Fragment","ReactDOM","createPortal","_jsxs","Manager","receiver","Reflect","get","base","object","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","hasClass","baseVal","marginProp","el","adjustAndStore","restore","createWithBsPrefix","ModalContext","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","propTypes","PropTypes","string","func","oneOf","CloseButton","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalHeader","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"mappings":"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","file":"static/js/7.4633e24f.chunk.js","sourcesContent":["const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import createFormValueSelector from './createFormValueSelector';\nimport plain from './structure/plain';\nexport default createFormValueSelector(plain);","import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}"],"sourceRoot":""}