{"version":3,"sources":["app/views/assignment_tasks/edit_assignment_task/EditAssignmentTask.js","app/views/shared/components/ErrorModal.js","app/views/shared/components/Loader.js","fake-db/static_data/LetterTemplate.js","app/views/shared/form/form.js","app/views/assignment_tasks/shared/validation.js","fake-db/static_data/AssignmentTask.js"],"names":["connect","state","initialValues","title","editAssignmentTask","assignmentTask","examType","collectionDate","moment","ISO_8601","format","examCenters","httpError","error","loading","initializeForm","setError","resetError","reduxForm","form","validate","enableReinitialize","props","history","useHistory","taskId","useParams","useEffect","onConfirm","routeSegments","name","path","className","onSubmit","handleSubmit","values","swal","fire","text","icon","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","toString","onBeforeOpen","showLoading","onOpen","a","axios","method","url","process","data","response","hideLoading","html","allowOutsideClick","push","placeholder","helpText","component","renderMultiColumnFormInputField","items","examTypes","defaultOption","renderMultiColumnFormSelect","isValidDate","current","isAfter","subtract","renderMultiColumnFormDateTimeField","Check","label","onChange","event","target","checked","newValue","map","examCenter","id","change","renderMultipleColumnFormExamCentersCheckboxGroup","ErrorModal","show","message","styles","position","left","right","top","margin","height","width","zIndex","loaderOverlay","backgroundColor","Loader","style","tagFieldsOptions","renderError","meta","touched","formProps","readOnly","input","item","key","closeOnSelect","timeFormat","dateFormat","index","indexOf","splice","school","schoolCode","examCenterCode","schoolName","renderInvigilatorOptions","options","option","user","assigningSchoolId","teacherName","renderEditAssignmentResultArrayField","fields","invigilator","schoolId","renderMultiColumnFormRichTextEditor","subtitle","content","handleContentChange","renderTagSelectField","onClick","removedTag","newLetterContent","letterContent","replace","fieldLength","idx","modifiedTag","newTag","changeFunction","onRemoveTag","renderTagsSelector","length","tag","remove","renderLetterTemplateRadio","Fragment","radioValue","validateAssignmentTask","errors","validateAssignmentResult","Array","duplicate","valueArray","lastIndexOf","innerKey","innerKeyValueArray","validateCompileLetterTemplate","letterTemplate"],"mappings":"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","file":"static/js/22.54682092.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport moment from \"moment\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nimport ErrorModal from \"app/views/shared/components/ErrorModal\";\r\nimport Loader from \"app/views/shared/components/Loader\";\r\nimport {\r\n  renderMultiColumnFormInputField,\r\n  renderMultiColumnFormSelect,\r\n  renderMultiColumnFormDateTimeField,\r\n  renderMultipleColumnFormExamCentersCheckboxGroup,\r\n} from \"app/views/shared/form/form\";\r\nimport { initializeForm } from \"app/redux/actions/EditAssignmentTaskActions\";\r\nimport { setError, resetError } from \"app/redux/actions/ErrorModalActions\";\r\nimport { examTypes } from \"fake-db/static_data/AssignmentTask\";\r\nimport { validateAssignmentTask as validate } from \"../shared/validation\";\r\n\r\nconst EditAssignmentTask = (props) => {\r\n  const history = useHistory();\r\n  const taskId = useParams().taskId;\r\n\r\n  useEffect(() => {\r\n    props.initializeForm(taskId);\r\n  }, []);\r\n\r\n  const handleFormSubmit = (values) => {\r\n    swal\r\n      .fire({\r\n        title: \"Are you sure?\",\r\n        text: \"Any changes adding or removing exam centers will remove the previous assignment result\",\r\n        icon: \"warning\",\r\n        type: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, Save Changes!\",\r\n        cancelButtonText: \"No\",\r\n      })\r\n      .then((result) => {\r\n        if (result.value) {\r\n          values = {\r\n            ...values,\r\n            collectionDate: moment(\r\n              values.collectionDate,\r\n              \"DD/MM/YYYY HH:mm\"\r\n            ).toString(),\r\n          };\r\n          swal.fire({\r\n            title: \"Saving Changes...\",\r\n            onBeforeOpen: () => {\r\n              swal.showLoading();\r\n            },\r\n            onOpen: async () => {\r\n              //submit form process here remember to async and await with try...catch block\r\n              try {\r\n                await axios({\r\n                  method: \"PATCH\",\r\n                  url: `${process.env.REACT_APP_BACKEND_URL}/assignments/${taskId}`,\r\n                  data: values,\r\n                }).then((response) => {\r\n                  swal.hideLoading();\r\n                  swal\r\n                    .fire({\r\n                      title: \"Successfully Edit Assignment Task\",\r\n                      icon: \"success\",\r\n                      html: \"Please re-assign the invigilators if there is any adding/removing of exam centers\",\r\n                      allowOutsideClick: false,\r\n                    })\r\n                    .then((result) => {\r\n                      history.push(\"/assignment/list\");\r\n                    });\r\n                });\r\n              } catch (err) {\r\n                swal.hideLoading();\r\n                props.setError(err);\r\n              }\r\n            },\r\n            allowOutsideClick: false,\r\n          });\r\n        } else {\r\n          swal.fire(\"Cancelled!\", \"Permission denied.\", \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.loading && <Loader></Loader>}\r\n      <ErrorModal error={props.httpError} onConfirm={props.resetError} />\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Assignment Tasks\", path: \"/assignment\" },\r\n          { name: \"Assignment Tasks List\", path: \"/assignment/list\" },\r\n          { name: \"Edit Assignment Task\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n      <div className=\"2-columns-form-layout\">\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header bg-transparent\">\r\n                  <h3 className=\"card-title\"> Edit Assignment Task</h3>\r\n                </div>\r\n                <form onSubmit={props.handleSubmit(handleFormSubmit)}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        placeholder=\"Assignment Task Title\"\r\n                        helpText=\"Please enter the assignment task's title\"\r\n                        component={renderMultiColumnFormInputField}\r\n                      />\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"examType\"\r\n                        items={examTypes}\r\n                        helpText=\"Please select the exam type\"\r\n                        defaultOption=\"Please select an exam type...\"\r\n                        component={renderMultiColumnFormSelect}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        className=\"col-md-6\"\r\n                        name=\"collectionDate\"\r\n                        placeholder=\"Please select data collection deadline\"\r\n                        helpText=\"Please select data collection deadline\"\r\n                        isValidDate={(current) => {\r\n                          return current.isAfter(moment().subtract(1, \"day\"));\r\n                        }}\r\n                        component={renderMultiColumnFormDateTimeField}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"custom-separator\"></div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group col-md-6\">\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          name=\"selectAll\"\r\n                          label=\"Select All Exam Centers\"\r\n                          onChange={(event) => {\r\n                            if (event.target.checked) {\r\n                              const newValue = props.examCenters.map(\r\n                                (examCenter) => examCenter.id\r\n                              );\r\n                              props.change(\"examCenters\", newValue);\r\n                            } else {\r\n                              props.change(\"examCenters\", []);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <Field\r\n                        name=\"examCenters\"\r\n                        items={props.examCenters}\r\n                        component={\r\n                          renderMultipleColumnFormExamCentersCheckboxGroup\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"mc-footer\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn  btn-primary m-1\"\r\n                          >\r\n                            Save Changes\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialValues: {\r\n      title: state.editAssignmentTask.assignmentTask.title,\r\n      examType: state.editAssignmentTask.assignmentTask.examType,\r\n      collectionDate: moment(\r\n        state.editAssignmentTask.assignmentTask.collectionDate,\r\n        moment.ISO_8601\r\n      ).format(\"DD/MM/YYYY HH:mm\"),\r\n      examCenters: state.editAssignmentTask.assignmentTask.examCenters,\r\n    },\r\n    examCenters: state.editAssignmentTask.examCenters,\r\n    httpError: state.error.error,\r\n    loading: state.loading.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  initializeForm,\r\n  setError,\r\n  resetError,\r\n})(\r\n  reduxForm({\r\n    form: \"EditAssignmentTask\",\r\n    validate: validate,\r\n    enableReinitialize: true,\r\n  })(EditAssignmentTask)\r\n);\r\n","import React from \"react\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <SweetAlert\r\n      show={!!props.error}\r\n      title=\"An Error Occured\"\r\n      type=\"error\"\r\n      text={\r\n        props.error\r\n          ? props.error.response\r\n            ? props.error.response.data.message\r\n            : props.error.message\r\n          : \"\"\r\n      }\r\n      onConfirm={() => props.onConfirm()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  right: 0,\r\n  top: \"calc(50% - 20px)\",\r\n  margin: \"auto\",\r\n  height: \"40px\",\r\n  width: \"40px\",\r\n  zIndex: 324324324,\r\n};\r\n\r\nconst loaderOverlay = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  top: 0,\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  zIndex: 324324323,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div style={loaderOverlay}>\r\n      <div style={styles}>\r\n        <div className=\"spinner spinner-bubble spinner-bubble-primary\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const tagFieldsOptions = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Task Title\",\r\n    value: \"title\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Exam Type\",\r\n    value: \"examType\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"Assigned Exam Center Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolName\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    title: \"Assigned School Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.schoolCode\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    title: \"Assigned Exam Center Code\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.examCenterCode\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    title: \"Role\",\r\n    value: \"assignmentResults[assignmentResultIndex].role\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    title: \"Invigilator Name\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    title: \"Invigilator IC\",\r\n    value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].icNumber\",\r\n  },\r\n];\r\n\r\nexport const LetterTemplates = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Assignment Letter for Chief Of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Assignment Letter for Vice Chief of Invigilator\",\r\n    content:\r\n      \"<h1>Assignment Letter for Vice Chief Of Invigilator</h1><p><br></p><p>Dear &lt;1&gt;,</p><p class='ql-indent-2'>It is an honour to announce that you are assigned as the Chief of Invigilator for &lt;2&gt;.</p><p><br></p><p>Signature,</p><p>Someone</p>\",\r\n    tags: [\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].invigilators[invigilatorIndex].teacherName\",\r\n      },\r\n      {\r\n        value: \"assignmentResults[assignmentResultIndex].results[resultIndex].examCenter.school.name\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport DateTime from \"react-datetime\";\r\nimport { SimpleCard, RichTextEditor } from \"@gull\";\r\nimport { Field } from \"redux-form\";\r\nimport { tagFieldsOptions } from \"fake-db/static_data/LetterTemplate\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst renderError = (meta) => {\r\n  if (meta.touched && meta.error) {\r\n    return <div className=\"text-danger mt-1 ml-2\">{meta.error}</div>;\r\n  }\r\n};\r\n\r\nexport const renderMultiColumnFormInputField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <input\r\n        readOnly={formProps.readOnly}\r\n        type={formProps.type}\r\n        {...formProps.input}\r\n        placeholder={formProps.placeholder}\r\n        className=\"form-control\"\r\n      ></input>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormSelect = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        className=\"form-control\"\r\n        {...formProps.input}\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        <option value=\"\">{formProps.defaultOption}</option>\r\n        {formProps.items.map((item) => (\r\n          <option key={item.id} value={item.value}>\r\n            {item.title}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormDateTimeField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <DateTime\r\n        name={formProps.name}\r\n        closeOnSelect={true}\r\n        onChange={formProps.input.onChange}\r\n        isValidDate={formProps.isValidDate}\r\n        timeFormat=\"HH:mm\"\r\n        dateFormat=\"DD/MM/YYYY\"\r\n        placeholder={formProps.placeholder}\r\n        value={formProps.input.value}\r\n      />\r\n      <small className=\"ul-form__text form-text \">{formProps.helpText}</small>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultipleColumnFormExamCentersCheckboxGroup = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <label className=\"ul-form__label\">Exam Centers: </label>\r\n      <div className=\"row\">\r\n        {formProps.items.map((item, index) => {\r\n          return (\r\n            <div className=\"form-group col-md-6\" key={index}>\r\n              <label className=\"checkbox checkbox-primary\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={`${formProps.input.name}[${index}]`}\r\n                  value={item.id}\r\n                  checked={formProps.input.value.indexOf(item.id) !== -1}\r\n                  onChange={(event) => {\r\n                    const newValue = [...formProps.input.value];\r\n                    if (event.target.checked) {\r\n                      newValue.push(item.id);\r\n                    } else {\r\n                      newValue.splice(newValue.indexOf(item.id), 1);\r\n                    }\r\n\r\n                    return formProps.input.onChange(newValue);\r\n                  }}\r\n                />\r\n                <span>{`${item.school.schoolCode} - ${item.examCenterCode} - ${item.school.schoolName}`}</span>\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderInvigilatorOptions = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <select\r\n        {...formProps.input}\r\n        className=\"form-control\"\r\n        onChange={formProps.input.onChange}\r\n      >\r\n        {formProps.options.map((option) => {\r\n          return (\r\n            option.user.school.id !== formProps.assigningSchoolId && (\r\n              <option key={option.id} value={option.id}>\r\n                {`${option.teacherName} - ${option.user.school.schoolCode}`}\r\n              </option>\r\n            )\r\n          );\r\n        })}\r\n      </select>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderEditAssignmentResultArrayField = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <label className=\"ul-form__label\">{formProps.label}</label>\r\n      <div className=\"row\">\r\n        {formProps.fields.map((invigilator, index) => {\r\n          return (\r\n            <Field\r\n              key={invigilator}\r\n              className=\"col-lg-12\"\r\n              name={invigilator}\r\n              options={formProps.options}\r\n              assigningSchoolId={formProps.schoolId}\r\n              component={renderInvigilatorOptions}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderMultiColumnFormRichTextEditor = (formProps) => {\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <SimpleCard title={formProps.title} subtitle={formProps.subtitle}>\r\n        <RichTextEditor\r\n          {...formProps.input}\r\n          content={formProps.input.value}\r\n          handleContentChange={formProps.input.onChange}\r\n          placeholder={formProps.placeholder}\r\n        />\r\n      </SimpleCard>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderTagSelectField = (formProps) => {\r\n  return (\r\n    <div className={`form-group ${formProps.className || \"\"}`}>\r\n      <div className=\"row\">\r\n        <label className=\"ul-form__label ul-form--margin col-lg-1 col-form-label \">\r\n          {formProps.label}\r\n        </label>\r\n        <div className=\"col-lg-8\">\r\n          <select\r\n            className=\"form-control\"\r\n            {...formProps.input}\r\n            onChange={formProps.input.onChange}\r\n          >\r\n            <option value=\"\">{formProps.defaultOption}</option>\r\n            {formProps.items.map((item) => (\r\n              <option key={item.id} value={item.value}>\r\n                {item.title}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger m-1\"\r\n            onClick={() => {\r\n              const removedTag = \"&lt;\" + (formProps.index + 1) + \"&gt;\";\r\n              let newLetterContent = formProps.letterContent.replace(\r\n                removedTag,\r\n                \"\"\r\n              );\r\n              if (formProps.index < formProps.fieldLength) {\r\n                for (\r\n                  var idx = formProps.index + 1;\r\n                  idx < formProps.fieldLength;\r\n                  idx++\r\n                ) {\r\n                  const modifiedTag = \"&lt;\" + (idx + 1) + \"&gt;\";\r\n                  const newTag = \"&lt;\" + idx + \"&gt;\";\r\n                  newLetterContent = newLetterContent.replace(\r\n                    modifiedTag,\r\n                    newTag\r\n                  );\r\n                }\r\n              }\r\n              formProps.changeFunction(\"content\", newLetterContent);\r\n              formProps.onRemoveTag(formProps.index);\r\n            }}\r\n          >\r\n            Remove Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {renderError(formProps.meta)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderTagsSelector = (formProps) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-secondary m-1\"\r\n          onClick={() => {\r\n            formProps.fields.push({});\r\n            let newLetterContent;\r\n            if (formProps.letterContent) {\r\n              newLetterContent =\r\n                formProps.letterContent +\r\n                \"&lt;\" +\r\n                (formProps.fields.length + 1) +\r\n                \"&gt;\";\r\n            } else {\r\n              newLetterContent =\r\n                \"&lt;\" + (formProps.fields.length + 1) + \"&gt;\";\r\n            }\r\n            formProps.changeFunction(\"content\", newLetterContent);\r\n          }}\r\n        >\r\n          Add New Tag\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"custom-separator\"></div>\r\n\r\n      {formProps.fields.map((tag, index) => (\r\n        <Field\r\n          key={index}\r\n          className=\"col-md-12\"\r\n          label={`<${index + 1}>`}\r\n          name={`${tag}.value`}\r\n          component={renderTagSelectField}\r\n          defaultOption=\"Please select a field\"\r\n          onRemoveTag={formProps.fields.remove}\r\n          changeFunction={formProps.changeFunction}\r\n          letterContent={formProps.letterContent}\r\n          index={index}\r\n          fieldLength={formProps.fields.length}\r\n          items={tagFieldsOptions}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderLetterTemplateRadio = (formProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.Check\r\n        type=\"radio\"\r\n        label={formProps.label}\r\n        {...formProps.input}\r\n        value={formProps.radioValue}\r\n      />\r\n      {renderError(formProps.meta)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","export const validateAssignmentTask = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Please enter the title\";\r\n  }\r\n\r\n  if (!values.examType || values.examType === \"\") {\r\n    errors.examType = \"Please select the exam type\";\r\n  }\r\n\r\n  if (!values.collectionDate) {\r\n    errors.collectionDate = \"Please select the deadline of data collection\";\r\n  }\r\n\r\n  if (!values.examCenters || values.examCenters.length <= 1) {\r\n    errors.examCenters = \"Must select at least two exam center\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateAssignmentResult = (values) => {\r\n  const errors = {};\r\n  for (let key in values) {\r\n    errors[key] = new Array(values[key].length);\r\n  }\r\n  let duplicate = false;\r\n\r\n  for (let key in values) {\r\n    const valueArray = values[key];\r\n    for (let value of valueArray) {\r\n      if (valueArray.indexOf(value) !== valueArray.lastIndexOf(value)) {\r\n        errors[key][valueArray.indexOf(value)] =\r\n          \"The invigilator cannot be the same\";\r\n        errors[key][valueArray.lastIndexOf(value)] =\r\n          \"The invigilator cannot be the same\";\r\n        duplicate = true;\r\n        break;\r\n      }\r\n\r\n      for (let innerKey in values) {\r\n        if (innerKey === key) {\r\n          continue;\r\n        }\r\n\r\n        const innerKeyValueArray = values[innerKey];\r\n        for (let innerValue of innerKeyValueArray) {\r\n          if (value === innerValue) {\r\n            errors[key][valueArray.indexOf(value)] =\r\n              \"The invigilator cannot be the same\";\r\n            errors[innerKey][innerKeyValueArray.indexOf(value)] =\r\n              \"The invigilator cannot be the same\";\r\n            duplicate = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (duplicate) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateCompileLetterTemplate = (values) => {\r\n  const errors = {};\r\n  if (!values.letterTemplate) {\r\n    errors.letterTemplate = \"Please select the letter template\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","export const examTypes = [\r\n  {\r\n    id: \"01\",\r\n    title: \"Pentaksiran Tingkatan 3 (PT3)\",\r\n    value: \"PT3\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"Sijil Pelajaran Malaysia (SPM)\",\r\n    value: \"SPM\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    title: \"Sijil Tinggi Persekolahan Malaysia (STPM)\",\r\n    value: \"STPM\",\r\n  },\r\n];\r\n\r\nexport const examCenters = [\r\n  {\r\n    id: \"01\",\r\n    examCenterCode: \"JC005\",\r\n    school: \"01\",\r\n    safeRoomNo: \"J01\",\r\n    assignmentTasks: [\"01\", \"02\", \"03\"],\r\n  },\r\n  {\r\n    id: \"02\",\r\n    examCenterCode: \"JC017\",\r\n    school: \"02\",\r\n    safeRoomNo: \"J02\",\r\n    assignmentTasks: [\"01\", \"02\", \"03\"],\r\n  },\r\n  {\r\n    id: \"03\",\r\n    examCenterCode: \"JC013\",\r\n    school: \"03\",\r\n    safeRoomNo: \"J03\",\r\n    assignmentTasks: [\"01\", \"02\", \"03\"],\r\n  },\r\n];\r\n\r\nexport const Schools = [\r\n  {\r\n    id: \"01\",\r\n    name: \"SMK Tinggi Kluang\",\r\n    schoolCode: \"JEB2037\",\r\n    examCenters: [\"01\"],\r\n    address: \"xxxx, Jalan XXX, 81000, XXX, Johor\",\r\n    examSecretary: \"01\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    name: \"SMK Tengku Aris Bendahara\",\r\n    schoolCode: \"JEB2038\",\r\n    examCenters: [\"02\"],\r\n    address: \"xxxx, Jalan XXX, 81000, XXX, Johor\",\r\n    examSecretary: \"02\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    name: \"SMK Sultan Abdul Jalil\",\r\n    schoolCode: \"JEA2033\",\r\n    examCenters: [\"03\"],\r\n    address: \"xxxx, Jalan XXX, 81000, XXX, Johor\",\r\n    examSecretary: \"03\",\r\n  },\r\n];\r\n\r\nexport const AssignmentTasks = [\r\n  {\r\n    id: \"01\",\r\n    title: \"SPM 2020\",\r\n    examType: \"SPM\",\r\n    createdDate: \"20/03/2020 17:16\",\r\n    collectionDate: \"21/03/2020 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [\"01\", \"02\", \"03\"],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Completed\" },\r\n      { examCenter: \"02\", status: \"Completed\" },\r\n      { examCenter: \"03\", status: \"Completed\" },\r\n    ],\r\n    chiefInvigilatorComplete: true,\r\n    viceChiefInvigilatorComplete: true,\r\n    invigilatorComplete: true,\r\n    environmentalSupervisorComplete: true,\r\n    roomKeeperComplete: true,\r\n    reservedInvigilatorComplete: true,\r\n    assignmentResults: [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"],\r\n    status: \"Assignment Complete\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    title: \"STPM 2022\",\r\n    examType: \"STPM\",\r\n    createdDate: \"20/03/2022 17:16\",\r\n    collectionDate: \"20/04/2022 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Incomplete\" },\r\n      { examCenter: \"02\", status: \"Incomplete\" },\r\n      { examCenter: \"03\", status: \"Incomplete\" },\r\n    ],\r\n    chiefInvigilatorComplete: false,\r\n    viceChiefInvigilatorComplete: false,\r\n    invigilatorComplete: false,\r\n    environmentalSupervisorComplete: false,\r\n    roomKeeperComplete: false,\r\n    reservedInvigilatorComplete: false,\r\n    assignmentResults: [],\r\n    status: \"Collection in progress\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    title: \"SPM 2022\",\r\n    examType: \"SPM\",\r\n    createdDate: \"18/03/2022 17:16\",\r\n    collectionDate: \"19/03/2022 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [\"04\", \"05\", \"06\"],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Completed\" },\r\n      { examCenter: \"02\", status: \"Completed\" },\r\n      { examCenter: \"03\", status: \"Completed\" },\r\n    ],\r\n    chiefInvigilatorComplete: true,\r\n    viceChiefInvigilatorComplete: false,\r\n    invigilatorComplete: true,\r\n    environmentalSupervisorComplete: false,\r\n    roomKeeperComplete: false,\r\n    reservedInvigilatorComplete: false,\r\n    assignmentResults: [\"07\", \"08\"],\r\n    status: \"Assigning in progress\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    title: \"PT3 2022\",\r\n    examType: \"PT3\",\r\n    createdDate: \"18/03/2022 17:16\",\r\n    collectionDate: \"19/03/2022 00:00\",\r\n    examCenters: [\"01\", \"02\", \"03\"],\r\n    examCenterData: [\"07\"],\r\n    collectionStatus: [\r\n      { examCenter: \"01\", status: \"Completed\" },\r\n      { examCenter: \"02\", status: \"Pending\" },\r\n      { examCenter: \"03\", status: \"Incomplete\" },\r\n    ],\r\n    chiefInvigilatorComplete: false,\r\n    viceChiefInvigilatorComplete: false,\r\n    invigilatorComplete: false,\r\n    environmentalSupervisorComplete: false,\r\n    roomKeeperComplete: false,\r\n    reservedInvigilatorComplete: false,\r\n    assignmentResults: [],\r\n    status: \"Collection data incomplete\",\r\n  },\r\n];\r\n\r\nexport const examCenterData = [\r\n  {\r\n    id: \"01\",\r\n    examCenter: \"01\",\r\n    assignmentTaskId: \"01\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 1,\r\n    numberOfInvigilatorRequired: 10,\r\n    numberOfReservedInvigilatorRequired: 2,\r\n  },\r\n  {\r\n    id: \"02\",\r\n    examCenter: \"02\",\r\n    assignmentTaskId: \"01\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 2,\r\n    numberOfInvigilatorRequired: 15,\r\n    numberOfReservedInvigilatorRequired: 2,\r\n  },\r\n  {\r\n    id: \"03\",\r\n    examCenter: \"03\",\r\n    assignmentTaskId: \"01\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 1,\r\n    numberOfInvigilatorRequired: 8,\r\n    numberOfReservedInvigilatorRequired: 1,\r\n  },\r\n  {\r\n    id: \"04\",\r\n    examCenter: \"01\",\r\n    assignmentTaskId: \"03\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 1,\r\n    numberOfInvigilatorRequired: 2,\r\n    numberOfReservedInvigilatorRequired: 1,\r\n  },\r\n  {\r\n    id: \"05\",\r\n    examCenter: \"02\",\r\n    assignmentTaskId: \"03\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 1,\r\n    numberOfInvigilatorRequired: 2,\r\n    numberOfReservedInvigilatorRequired: 1,\r\n  },\r\n  {\r\n    id: \"06\",\r\n    examCenter: \"03\",\r\n    assignmentTaskId: \"03\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 1,\r\n    numberOfInvigilatorRequired: 2,\r\n    numberOfReservedInvigilatorRequired: 1,\r\n  },\r\n  {\r\n    id: \"07\",\r\n    examCenter: \"01\",\r\n    assignmentTaskId: \"04\",\r\n    numberOfChiefInvigilatorRequired: 1,\r\n    numberOfViceChiefInvigilatorRequired: 1,\r\n    numberOfEnvironmentalSupervisorRequired: 1,\r\n    numberOfRoomKeeperRequired: 1,\r\n    numberOfInvigilatorRequired: 8,\r\n    numberOfReservedInvigilatorRequired: 1,\r\n  },\r\n];\r\n\r\nexport const Invigilators = [\r\n  {\r\n    id: \"01\",\r\n    name: \"MOHD. APANDI B BASIR\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"01\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    name: \"RAJA ROHANI BINTI RAJA HAROON\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"F\",\r\n    schoolId: \"02\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    name: \"SAMSI BIN ARGI\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"03\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    name: \"Invigilator 04\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"01\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    name: \"Invigilator 05\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"02\",\r\n  },\r\n  {\r\n    id: \"06\",\r\n    name: \"Invigilator 06\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"03\",\r\n  },\r\n  {\r\n    id: \"07\",\r\n    name: \"Invigilator 07\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"01\",\r\n  },\r\n  {\r\n    id: \"08\",\r\n    name: \"Invigilator 08\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"02\",\r\n  },\r\n  {\r\n    id: \"09\",\r\n    name: \"Invigilator 09\",\r\n    ic: \"xxxxx-01-xxxx\",\r\n    email: \"xxxx@gmail.com\",\r\n    gender: \"M\",\r\n    schoolId: \"03\",\r\n  },\r\n];\r\n\r\nexport const AssignmentResults = [\r\n  {\r\n    id: \"01\",\r\n    assignmentTask: \"01\",\r\n    role: \"chiefInvigilator\",\r\n    results: [\r\n      {\r\n        examCenter: \"01\",\r\n        invigilators: [\"03\"],\r\n      },\r\n      {\r\n        examCenter: \"02\",\r\n        invigilators: [\"01\"],\r\n      },\r\n      {\r\n        examCenter: \"03\",\r\n        invigilators: [\"02\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"07\",\r\n    assignmentTask: \"03\",\r\n    role: \"chiefInvigilator\",\r\n    results: [\r\n      {\r\n        examCenter: \"01\",\r\n        invigilators: [\"03\"],\r\n      },\r\n      {\r\n        examCenter: \"02\",\r\n        invigilators: [\"01\"],\r\n      },\r\n      {\r\n        examCenter: \"03\",\r\n        invigilators: [\"02\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"08\",\r\n    assignmentTask: \"03\",\r\n    role: \"invigilator\",\r\n    results: [\r\n      {\r\n        examCenter: \"01\",\r\n        invigilators: [\"03\", \"05\"],\r\n      },\r\n      {\r\n        examCenter: \"02\",\r\n        invigilators: [\"01\", \"06\"],\r\n      },\r\n      {\r\n        examCenter: \"03\",\r\n        invigilators: [\"02\", \"04\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n"],"sourceRoot":""}