{"version":3,"sources":["app/views/sessions/Signin.jsx"],"names":["SigninSchema","yup","shape","login","required","password","Signin","state","handleChange","event","persist","setState","target","name","value","handleSubmit","isSubmitting","props","className","style","backgroundImage","src","alt","initialValues","this","validationSchema","onSubmit","values","errors","touched","handleBlur","htmlFor","type","onChange","onBlur","loading","backgroundSize","loginError","Component","connect","PropTypes","func","isRequired","error"],"mappings":"wOAOMA,EAAeC,WAAaC,MAAM,CACtCC,MAAOF,WAAaG,SAAS,qBAC7BC,SAAUJ,WAAaG,SAAS,0BAG5BE,E,4MACJC,MAAQ,CACNJ,MAAO,GACPE,SAAU,I,EAGZG,aAAe,SAACC,GACdA,EAAMC,UACN,EAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,S,EAGpDC,aAAe,SAACD,EAAD,GAA6B,EAAnBE,aACvB,EAAKC,MAAMd,MAAMW,I,4CAGnB,WAAU,IAAD,OACP,OACE,yBACEI,UAAU,mBACVC,MAAO,CACLC,gBAAiB,yCAGnB,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKG,IAAI,0BAA0BC,IAAI,MAEzC,wBAAIJ,UAAU,gBAAd,WACA,kBAAC,IAAD,CACEK,cAAeC,KAAKjB,MACpBkB,iBAAkBzB,EAClB0B,SAAUF,KAAKT,eAEd,gBACCY,EADD,EACCA,OACAC,EAFD,EAECA,OAEApB,GAJD,EAGCqB,QAHD,EAICrB,cACAsB,EALD,EAKCA,WACAf,EAND,EAMCA,aAND,EAOCC,aAPD,OASC,0BAAMU,SAAUX,GACd,yBAAKG,UAAU,cACb,2BAAOa,QAAQ,SAAf,SACA,2BACEb,UAAU,sDACVc,KAAK,OACLnB,KAAK,QACLoB,SAAUzB,EACV0B,OAAQJ,EACRhB,MAAOa,EAAOxB,QAEfyB,EAAOzB,OACN,yBAAKe,UAAU,yBACZU,EAAOzB,QAId,yBAAKe,UAAU,cACb,2BAAOa,QAAQ,YAAf,YACA,2BACEb,UAAU,oCACVc,KAAK,WACLnB,KAAK,WACLoB,SAAUzB,EACV0B,OAAQJ,EACRhB,MAAOa,EAAOtB,WAEfuB,EAAOvB,UACN,yBAAKa,UAAU,yBACZU,EAAOvB,WAIb,EAAKY,MAAMkB,QACV,yBAAKjB,UAAU,+BACb,yBAAKA,UAAU,kCAGjB,4BACEA,UAAU,8CACVc,KAAK,UAFP,iBAYZ,yBACEd,UAAU,wBACVC,MAAO,CACLiB,eAAgB,QAChBhB,gBAAiB,6CAGnB,yBAAKF,UAAU,mBACb,yBAAKA,UAAU,yBACZM,KAAKP,MAAMoB,sB,GAzGXC,aA2HNC,uBANS,SAAChC,GAAD,MAAY,CAClCJ,MAAOqC,IAAUC,KAAKC,WACtBL,WAAY9B,EAAMJ,MAAMwC,MACxBR,QAAS5B,EAAMJ,MAAMgC,WAGiB,CACtChC,WADaoC,CAEZjC","file":"static/js/46.be27a409.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { login } from \"app/redux/actions/LoginActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SigninSchema = yup.object().shape({\r\n  login: yup.string().required(\"Login is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n});\r\n\r\nclass Signin extends Component {\r\n  state = {\r\n    login: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (value, { isSubmitting }) => {\r\n    this.props.login(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\r\n        }}\r\n      >\r\n        <div className=\"auth-content\">\r\n          <div className=\"card o-hidden\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"p-4\">\r\n                  <div className=\"auth-logo text-center mb-4\">\r\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n                  </div>\r\n                  <h1 className=\"mb-3 text-18\">Sign In</h1>\r\n                  <Formik\r\n                    initialValues={this.state}\r\n                    validationSchema={SigninSchema}\r\n                    onSubmit={this.handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"login\">Login</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"text\"\r\n                            name=\"login\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.login}\r\n                          />\r\n                          {errors.login && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.login}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"password\">Password</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                          />\r\n                          {errors.password && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        {this.props.loading ? (\r\n                          <div className=\"text-center w-100 my-1 mt-2\">\r\n                            <div className=\"spinner spinner-primary me-3\"></div>\r\n                          </div>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn btn-rounded btn-primary w-100 my-1 mt-2\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Sign In\r\n                          </button>\r\n                        )}\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-6 text-center \"\r\n                style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: \"url(/assets/images/login-form-photo.jpg)\",\r\n                }}\r\n              >\r\n                <div className=\"pe-3 auth-right\">\r\n                  <div className=\"text-danger mt-1 ml-2\">\r\n                    {this.props.loginError}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: PropTypes.func.isRequired,\r\n  loginError: state.login.error,\r\n  loading: state.login.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  login,\r\n})(Signin);\r\n"],"sourceRoot":""}